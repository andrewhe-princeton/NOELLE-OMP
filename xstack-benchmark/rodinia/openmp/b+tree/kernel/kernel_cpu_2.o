; ModuleID = './kernel/kernel_cpu_2.c'
source_filename = "./kernel/kernel_cpu_2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ident_t = type { i32, i32, i32, i32, i8* }
%struct.knode = type { i32, [509 x i32], [509 x i32], i8, i32 }

@.str = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@0 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
@1 = private unnamed_addr constant [45 x i8] c";./kernel/kernel_cpu_2.c;kernel_cpu_2;96;2;;\00", align 1
@2 = private unnamed_addr constant [46 x i8] c";./kernel/kernel_cpu_2.c;kernel_cpu_2;96;44;;\00", align 1
@3 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [41 x i8] c"%15.12f s, %15.12f % : MCPU: SET DEVICE\0A\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%15.12f s, %15.12f % : CPU/MCPU: KERNEL\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"%.12f s\0A\00", align 1
@str = private unnamed_addr constant [51 x i8] c"Time spent in different stages of CPU/MCPU KERNEL:\00", align 1
@str.6 = private unnamed_addr constant [12 x i8] c"Total time:\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @kernel_cpu_2(i32 %cores_arg, %struct.knode* %knodes, i64 %knodes_elem, i32 %order, i64 %maxheight, i32 %count, i64* %currKnode, i64* %offset, i64* %lastKnode, i64* %offset_2, i32* %start, i32* %end, i32* %recstart, i32* %reclength) local_unnamed_addr #0 !dbg !9 {
entry:
  %knodes.addr = alloca %struct.knode*, align 8
  %knodes_elem.addr = alloca i64, align 8
  %maxheight.addr = alloca i64, align 8
  %count.addr = alloca i32, align 4
  %currKnode.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %lastKnode.addr = alloca i64*, align 8
  %offset_2.addr = alloca i64*, align 8
  %start.addr = alloca i32*, align 8
  %end.addr = alloca i32*, align 8
  %recstart.addr = alloca i32*, align 8
  %reclength.addr = alloca i32*, align 8
  %threadsPerBlock = alloca i32, align 4
  %.kmpc_loc.addr = alloca %struct.ident_t, align 8
  %0 = bitcast %struct.ident_t* %.kmpc_loc.addr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.ident_t* @3 to i8*), i64 16, i1 false)
  call void @llvm.dbg.value(metadata i32 %cores_arg, metadata !31, metadata !DIExpression()), !dbg !54
  call void @llvm.dbg.value(metadata %struct.knode* %knodes, metadata !32, metadata !DIExpression()), !dbg !54
  store %struct.knode* %knodes, %struct.knode** %knodes.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i64 %knodes_elem, metadata !33, metadata !DIExpression()), !dbg !54
  store i64 %knodes_elem, i64* %knodes_elem.addr, align 8, !tbaa !59
  call void @llvm.dbg.value(metadata i32 %order, metadata !34, metadata !DIExpression()), !dbg !54
  call void @llvm.dbg.value(metadata i64 %maxheight, metadata !35, metadata !DIExpression()), !dbg !54
  store i64 %maxheight, i64* %maxheight.addr, align 8, !tbaa !59
  call void @llvm.dbg.value(metadata i32 %count, metadata !36, metadata !DIExpression()), !dbg !54
  store i32 %count, i32* %count.addr, align 4, !tbaa !61
  call void @llvm.dbg.value(metadata i64* %currKnode, metadata !37, metadata !DIExpression()), !dbg !54
  store i64* %currKnode, i64** %currKnode.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i64* %offset, metadata !38, metadata !DIExpression()), !dbg !54
  store i64* %offset, i64** %offset.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i64* %lastKnode, metadata !39, metadata !DIExpression()), !dbg !54
  store i64* %lastKnode, i64** %lastKnode.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i64* %offset_2, metadata !40, metadata !DIExpression()), !dbg !54
  store i64* %offset_2, i64** %offset_2.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i32* %start, metadata !41, metadata !DIExpression()), !dbg !54
  store i32* %start, i32** %start.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i32* %end, metadata !42, metadata !DIExpression()), !dbg !54
  store i32* %end, i32** %end.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i32* %recstart, metadata !43, metadata !DIExpression()), !dbg !54
  store i32* %recstart, i32** %recstart.addr, align 8, !tbaa !55
  call void @llvm.dbg.value(metadata i32* %reclength, metadata !44, metadata !DIExpression()), !dbg !54
  store i32* %reclength, i32** %reclength.addr, align 8, !tbaa !55
  %call = tail call i64 (...) @get_time() #8, !dbg !63
  call void @llvm.dbg.value(metadata i64 %call, metadata !45, metadata !DIExpression()), !dbg !54
  %call1 = tail call i32 @omp_get_max_threads() #8, !dbg !64
  call void @llvm.dbg.value(metadata i32 %call1, metadata !50, metadata !DIExpression()), !dbg !54
  tail call void @omp_set_num_threads(i32 %cores_arg) #8, !dbg !65
  %1 = bitcast i32* %threadsPerBlock to i8*, !dbg !66
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !66
  %cmp = icmp slt i32 %order, 1024, !dbg !67
  %cond = select i1 %cmp, i32 %order, i32 1024, !dbg !68
  call void @llvm.dbg.value(metadata i32 %cond, metadata !51, metadata !DIExpression()), !dbg !54
  store i32 %cond, i32* %threadsPerBlock, align 4, !dbg !69, !tbaa !61
  %call2 = tail call i64 (...) @get_time() #8, !dbg !70
  call void @llvm.dbg.value(metadata i64 %call2, metadata !47, metadata !DIExpression()), !dbg !54
  %2 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr, i64 0, i32 4, !dbg !71
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1, i64 0, i64 0), i8** %2, align 8, !dbg !71, !tbaa !72
  call void @llvm.dbg.value(metadata %struct.knode** %knodes.addr, metadata !32, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64* %knodes_elem.addr, metadata !33, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64* %maxheight.addr, metadata !35, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32* %count.addr, metadata !36, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64** %currKnode.addr, metadata !37, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64** %offset.addr, metadata !38, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64** %lastKnode.addr, metadata !39, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i64** %offset_2.addr, metadata !40, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32** %start.addr, metadata !41, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32** %end.addr, metadata !42, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32** %recstart.addr, metadata !43, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32** %reclength.addr, metadata !44, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void @llvm.dbg.value(metadata i32* %threadsPerBlock, metadata !51, metadata !DIExpression(DW_OP_deref)), !dbg !54
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr, i32 13, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i64*, i32*, %struct.knode**, i64**, i32**, i64*, i64**, i64**, i32**, i64**, i32**, i32**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %count.addr, i64* nonnull %maxheight.addr, i32* nonnull %threadsPerBlock, %struct.knode** nonnull %knodes.addr, i64** nonnull %currKnode.addr, i32** nonnull %start.addr, i64* nonnull %knodes_elem.addr, i64** nonnull %offset.addr, i64** nonnull %lastKnode.addr, i32** nonnull %end.addr, i64** nonnull %offset_2.addr, i32** nonnull %recstart.addr, i32** nonnull %reclength.addr) #8, !dbg !71
  %call3 = call i64 (...) @get_time() #8, !dbg !74
  call void @llvm.dbg.value(metadata i64 %call3, metadata !48, metadata !DIExpression()), !dbg !54
  %puts = call i32 @puts(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str, i64 0, i64 0)), !dbg !75
  %sub = sub nsw i64 %call2, %call, !dbg !76
  %conv = sitofp i64 %sub to float, !dbg !77
  %div = fdiv float %conv, 1.000000e+06, !dbg !78
  %conv5 = fpext float %div to double, !dbg !77
  %sub8 = sub nsw i64 %call3, %call, !dbg !79
  %conv9 = sitofp i64 %sub8 to float, !dbg !80
  %div10 = fdiv float %conv, %conv9, !dbg !81
  %mul = fmul float %div10, 1.000000e+02, !dbg !82
  %conv11 = fpext float %mul to double, !dbg !83
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), double %conv5, double %conv11), !dbg !84
  %sub13 = sub nsw i64 %call3, %call2, !dbg !85
  %conv14 = sitofp i64 %sub13 to float, !dbg !86
  %div15 = fdiv float %conv14, 1.000000e+06, !dbg !87
  %conv16 = fpext float %div15 to double, !dbg !86
  %div21 = fdiv float %conv14, %conv9, !dbg !88
  %mul22 = fmul float %div21, 1.000000e+02, !dbg !89
  %conv23 = fpext float %mul22 to double, !dbg !90
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), double %conv16, double %conv23), !dbg !91
  %puts50 = call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.6, i64 0, i64 0)), !dbg !92
  %div28 = fdiv float %conv9, 1.000000e+06, !dbg !93
  %conv29 = fpext float %div28 to double, !dbg !94
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), double %conv29), !dbg !95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !96
  ret void, !dbg !96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i64 @get_time(...) local_unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @omp_get_max_threads() local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @omp_set_num_threads(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dso_local void @__kmpc_for_static_init_4(%struct.ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32) local_unnamed_addr

declare dso_local void @__kmpc_for_static_fini(%struct.ident_t*, i32) local_unnamed_addr

; Function Attrs: norecurse nounwind uwtable
define internal void @.omp_outlined.(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readonly dereferenceable(4) %count, i64* nocapture readonly dereferenceable(8) %maxheight, i32* nocapture readonly dereferenceable(4) %threadsPerBlock, %struct.knode** nocapture readonly dereferenceable(8) %knodes, i64** nocapture readonly dereferenceable(8) %currKnode, i32** nocapture readonly dereferenceable(8) %start, i64* nocapture readonly dereferenceable(8) %knodes_elem, i64** nocapture readonly dereferenceable(8) %offset, i64** nocapture readonly dereferenceable(8) %lastKnode, i32** nocapture readonly dereferenceable(8) %end, i64** nocapture readonly dereferenceable(8) %offset_2, i32** nocapture readonly dereferenceable(8) %recstart, i32** nocapture readonly dereferenceable(8) %reclength) #4 !dbg !97 {
entry:
  %.omp.lb.i = alloca i32, align 4
  %.omp.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !110, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32* %.bound_tid., metadata !111, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32* %count, metadata !112, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64* %maxheight, metadata !113, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32* %threadsPerBlock, metadata !114, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata %struct.knode** %knodes, metadata !115, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64** %currKnode, metadata !116, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32** %start, metadata !117, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64* %knodes_elem, metadata !118, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64** %offset, metadata !119, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64** %lastKnode, metadata !120, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32** %end, metadata !121, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i64** %offset_2, metadata !122, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32** %recstart, metadata !123, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.value(metadata i32** %reclength, metadata !124, metadata !DIExpression()), !dbg !125
  %0 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.ident_t* @0 to i8*), i64 24, i1 false) #8, !noalias !126
  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !129, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* undef, metadata !132, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* %count, metadata !133, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64* %maxheight, metadata !134, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* %threadsPerBlock, metadata !135, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata %struct.knode** %knodes, metadata !136, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64** %currKnode, metadata !137, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32** %start, metadata !138, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64* %knodes_elem, metadata !139, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64** %offset, metadata !140, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64** %lastKnode, metadata !141, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32** %end, metadata !142, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i64** %offset_2, metadata !143, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32** %recstart, metadata !144, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32** %reclength, metadata !145, metadata !DIExpression()) #8, !dbg !155
  %1 = load i32, i32* %count, align 4, !dbg !157, !tbaa !61, !noalias !126
  call void @llvm.dbg.value(metadata i32 %1, metadata !147, metadata !DIExpression()) #8, !dbg !155
  %sub2.i = add nsw i32 %1, -1, !dbg !158
  call void @llvm.dbg.value(metadata i32 %sub2.i, metadata !147, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32 0, metadata !148, metadata !DIExpression()) #8, !dbg !155
  %cmp.i = icmp sgt i32 %1, 0, !dbg !158
  br i1 %cmp.i, label %omp.precond.then.i, label %.omp_outlined._debug__.exit, !dbg !158

omp.precond.then.i:                               ; preds = %entry
  %2 = bitcast i32* %.omp.lb.i to i8*, !dbg !158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !158, !noalias !126
  call void @llvm.dbg.value(metadata i32 0, metadata !149, metadata !DIExpression()) #8, !dbg !155
  store i32 0, i32* %.omp.lb.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  %3 = bitcast i32* %.omp.ub.i to i8*, !dbg !158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !158, !noalias !126
  call void @llvm.dbg.value(metadata i32 %sub2.i, metadata !150, metadata !DIExpression()) #8, !dbg !155
  store i32 %sub2.i, i32* %.omp.ub.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  %4 = bitcast i32* %.omp.stride.i to i8*, !dbg !158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !158, !noalias !126
  call void @llvm.dbg.value(metadata i32 1, metadata !151, metadata !DIExpression()) #8, !dbg !155
  store i32 1, i32* %.omp.stride.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  %5 = bitcast i32* %.omp.is_last.i to i8*, !dbg !158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8, !dbg !158, !noalias !126
  call void @llvm.dbg.value(metadata i32 0, metadata !152, metadata !DIExpression()) #8, !dbg !155
  store i32 0, i32* %.omp.is_last.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  %6 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !158
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1, i64 0, i64 0), i8** %6, align 8, !dbg !158, !tbaa !72, !noalias !126
  %7 = load i32, i32* %.global_tid., align 4, !dbg !158, !tbaa !61, !alias.scope !126
  call void @llvm.dbg.value(metadata i32* %.omp.lb.i, metadata !149, metadata !DIExpression(DW_OP_deref)) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* %.omp.ub.i, metadata !150, metadata !DIExpression(DW_OP_deref)) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* %.omp.stride.i, metadata !151, metadata !DIExpression(DW_OP_deref)) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32* %.omp.is_last.i, metadata !152, metadata !DIExpression(DW_OP_deref)) #8, !dbg !155
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %7, i32 34, i32* nonnull %.omp.is_last.i, i32* nonnull %.omp.lb.i, i32* nonnull %.omp.ub.i, i32* nonnull %.omp.stride.i, i32 1, i32 1) #8, !dbg !158, !noalias !126
  %8 = load i32, i32* %.omp.ub.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  call void @llvm.dbg.value(metadata i32 %8, metadata !150, metadata !DIExpression()) #8, !dbg !155
  %cmp5.i = icmp sgt i32 %8, %sub2.i, !dbg !159
  %cond.i = select i1 %cmp5.i, i32 %sub2.i, i32 %8, !dbg !159
  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !150, metadata !DIExpression()) #8, !dbg !155
  store i32 %cond.i, i32* %.omp.ub.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  %9 = load i32, i32* %.omp.lb.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  call void @llvm.dbg.value(metadata i32 %9, metadata !149, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32 %9, metadata !146, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !150, metadata !DIExpression()) #8, !dbg !155
  %cmp611.i = icmp sgt i32 %9, %cond.i, !dbg !158
  br i1 %cmp611.i, label %omp.loop.exit.i, label %for.cond.preheader.preheader.i, !dbg !158

for.cond.preheader.preheader.i:                   ; preds = %omp.precond.then.i
  %10 = sext i32 %9 to i64, !dbg !160
  %.pre.i = load i64, i64* %maxheight, align 8, !dbg !161, !tbaa !59, !noalias !126
  br label %for.cond.preheader.i, !dbg !160

for.cond.preheader.i:                             ; preds = %omp.inner.for.inc.i, %for.cond.preheader.preheader.i
  %11 = phi i64 [ %.pre.i, %for.cond.preheader.preheader.i ], [ %21, %omp.inner.for.inc.i ], !dbg !161
  %indvars.iv24.i = phi i64 [ %10, %for.cond.preheader.preheader.i ], [ %indvars.iv.next25.i, %omp.inner.for.inc.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv24.i, metadata !146, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32 0, metadata !153, metadata !DIExpression()) #8, !dbg !155
  %cmp85.i = icmp sgt i64 %11, 0, !dbg !165
  call void @llvm.dbg.value(metadata i32 0, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %12 = load i32, i32* %threadsPerBlock, align 4, !dbg !166, !noalias !126
  br i1 %cmp85.i, label %for.cond10.preheader.lr.ph.i, label %for.cond106.preheader.i, !dbg !167

for.cond10.preheader.lr.ph.i:                     ; preds = %for.cond.preheader.i
  %cmp111.i = icmp sgt i32 %12, 0, !dbg !168
  %13 = load %struct.knode*, %struct.knode** %knodes, align 8, !dbg !172, !noalias !126
  %14 = load i64*, i64** %currKnode, align 8, !dbg !172, !noalias !126
  %arrayidx.i = getelementptr inbounds i64, i64* %14, i64 %indvars.iv24.i, !dbg !172
  %15 = load i32*, i32** %start, align 8, !dbg !172, !noalias !126
  %arrayidx18.i = getelementptr inbounds i32, i32* %15, i64 %indvars.iv24.i, !dbg !172
  %16 = load i64*, i64** %offset, align 8, !dbg !175, !noalias !126
  %arrayidx49.i = getelementptr inbounds i64, i64* %16, i64 %indvars.iv24.i, !dbg !175
  %17 = load i64*, i64** %lastKnode, align 8, !dbg !179, !noalias !126
  %arrayidx52.i = getelementptr inbounds i64, i64* %17, i64 %indvars.iv24.i, !dbg !179
  %18 = load i32*, i32** %end, align 8, !dbg !179, !noalias !126
  %arrayidx58.i = getelementptr inbounds i32, i32* %18, i64 %indvars.iv24.i, !dbg !179
  %19 = load i64*, i64** %offset_2, align 8, !dbg !181, !noalias !126
  %arrayidx92.i = getelementptr inbounds i64, i64* %19, i64 %indvars.iv24.i, !dbg !181
  %20 = sext i32 %12 to i64, !dbg !167
  br label %for.cond10.preheader.i, !dbg !167

for.cond106.preheader.i:                          ; preds = %for.end.i, %for.cond.preheader.i
  %21 = phi i64 [ %11, %for.cond.preheader.i ], [ %41, %for.end.i ]
  call void @llvm.dbg.value(metadata i32 0, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %cmp1077.i = icmp sgt i32 %12, 0, !dbg !185
  br i1 %cmp1077.i, label %for.body109.lr.ph.i, label %omp.inner.for.inc.i, !dbg !188

for.body109.lr.ph.i:                              ; preds = %for.cond106.preheader.i
  %22 = load %struct.knode*, %struct.knode** %knodes, align 8, !dbg !189, !tbaa !55, !noalias !126
  %23 = load i64*, i64** %currKnode, align 8, !dbg !189, !tbaa !55, !noalias !126
  %arrayidx111.i = getelementptr inbounds i64, i64* %23, i64 %indvars.iv24.i, !dbg !189
  %24 = load i64, i64* %arrayidx111.i, align 8, !dbg !189, !tbaa !59, !noalias !126
  %25 = load i32*, i32** %start, align 8, !dbg !189, !tbaa !55, !noalias !126
  %arrayidx117.i = getelementptr inbounds i32, i32* %25, i64 %indvars.iv24.i, !dbg !189
  %26 = load i32*, i32** %recstart, align 8, !dbg !192, !noalias !126
  %arrayidx128.i = getelementptr inbounds i32, i32* %26, i64 %indvars.iv24.i, !dbg !192
  br label %for.body109.i, !dbg !188

for.cond10.preheader.i:                           ; preds = %for.end.i, %for.cond10.preheader.lr.ph.i
  %indvars.iv18.i = phi i64 [ 0, %for.cond10.preheader.lr.ph.i ], [ %indvars.iv.next19.i, %for.end.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.i, metadata !153, metadata !DIExpression()) #8, !dbg !155
  call void @llvm.dbg.value(metadata i32 0, metadata !154, metadata !DIExpression()) #8, !dbg !155
  br i1 %cmp111.i, label %for.body13.lr.ph.i, label %for.end.i, !dbg !194

for.body13.lr.ph.i:                               ; preds = %for.cond10.preheader.i
  %27 = load i32, i32* %arrayidx18.i, align 4, !dbg !172, !tbaa !61, !noalias !126
  %28 = load i32, i32* %arrayidx58.i, align 4, !dbg !179, !tbaa !61, !noalias !126
  br label %for.body13.i, !dbg !194

for.body13.i:                                     ; preds = %for.inc.i, %for.body13.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body13.lr.ph.i ], [ %.pre, %for.inc.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %29 = load i64, i64* %arrayidx.i, align 8, !dbg !195, !tbaa !59, !noalias !126
  %arrayidx16.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %29, i32 2, i64 %indvars.iv.i, !dbg !196
  %30 = load i32, i32* %arrayidx16.i, align 4, !dbg !196, !tbaa !61, !noalias !126
  %cmp19.i = icmp sgt i32 %30, %27, !dbg !197
  %.pre = add nuw nsw i64 %indvars.iv.i, 1, !dbg !168
  br i1 %cmp19.i, label %if.end50.i, label %land.lhs.true.i, !dbg !198

land.lhs.true.i:                                  ; preds = %for.body13.i
  %arrayidx27.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %29, i32 2, i64 %.pre, !dbg !199
  %31 = load i32, i32* %arrayidx27.i, align 4, !dbg !199, !tbaa !61, !noalias !126
  %cmp30.i = icmp sgt i32 %31, %27, !dbg !200
  br i1 %cmp30.i, label %if.then.i, label %if.end50.i, !dbg !201

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx36.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %29, i32 1, i64 %indvars.iv.i, !dbg !202
  %32 = load i32, i32* %arrayidx36.i, align 4, !dbg !202, !tbaa !61, !noalias !126
  %conv37.i = sext i32 %32 to i64, !dbg !202
  %33 = load i64, i64* %knodes_elem, align 8, !dbg !203, !tbaa !59, !noalias !126
  %cmp38.i = icmp sgt i64 %33, %conv37.i, !dbg !204
  br i1 %cmp38.i, label %if.then40.i, label %if.end50.i, !dbg !205

if.then40.i:                                      ; preds = %if.then.i
  store i64 %conv37.i, i64* %arrayidx49.i, align 8, !dbg !206, !tbaa !59, !noalias !126
  br label %if.end50.i, !dbg !207

if.end50.i:                                       ; preds = %for.body13.i, %if.then40.i, %if.then.i, %land.lhs.true.i
  %34 = load i64, i64* %arrayidx52.i, align 8, !dbg !208, !tbaa !59, !noalias !126
  %arrayidx56.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %34, i32 2, i64 %indvars.iv.i, !dbg !209
  %35 = load i32, i32* %arrayidx56.i, align 4, !dbg !209, !tbaa !61, !noalias !126
  %cmp59.i = icmp sgt i32 %35, %28, !dbg !210
  br i1 %cmp59.i, label %for.inc.i, label %land.lhs.true61.i, !dbg !211

land.lhs.true61.i:                                ; preds = %if.end50.i
  %arrayidx68.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %34, i32 2, i64 %.pre, !dbg !212
  %36 = load i32, i32* %arrayidx68.i, align 4, !dbg !212, !tbaa !61, !noalias !126
  %cmp71.i = icmp sgt i32 %36, %28, !dbg !213
  br i1 %cmp71.i, label %if.then73.i, label %for.inc.i, !dbg !214

if.then73.i:                                      ; preds = %land.lhs.true61.i
  %arrayidx79.i = getelementptr inbounds %struct.knode, %struct.knode* %13, i64 %34, i32 1, i64 %indvars.iv.i, !dbg !215
  %37 = load i32, i32* %arrayidx79.i, align 4, !dbg !215, !tbaa !61, !noalias !126
  %conv80.i = sext i32 %37 to i64, !dbg !215
  %38 = load i64, i64* %knodes_elem, align 8, !dbg !216, !tbaa !59, !noalias !126
  %cmp81.i = icmp sgt i64 %38, %conv80.i, !dbg !217
  br i1 %cmp81.i, label %if.then83.i, label %for.inc.i, !dbg !218

if.then83.i:                                      ; preds = %if.then73.i
  store i64 %conv80.i, i64* %arrayidx92.i, align 8, !dbg !219, !tbaa !59, !noalias !126
  br label %for.inc.i, !dbg !220

for.inc.i:                                        ; preds = %if.then83.i, %if.then73.i, %land.lhs.true61.i, %if.end50.i
  call void @llvm.dbg.value(metadata i32 undef, metadata !154, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)) #8, !dbg !155
  %exitcond = icmp eq i64 %.pre, %20, !dbg !221
  br i1 %exitcond, label %for.end.i, label %for.body13.i, !dbg !194, !llvm.loop !222

for.end.i:                                        ; preds = %for.inc.i, %for.cond10.preheader.i
  %39 = load i64, i64* %arrayidx49.i, align 8, !dbg !224, !tbaa !59, !noalias !126
  store i64 %39, i64* %arrayidx.i, align 8, !dbg !225, !tbaa !59, !noalias !126
  %40 = load i64, i64* %arrayidx92.i, align 8, !dbg !226, !tbaa !59, !noalias !126
  store i64 %40, i64* %arrayidx52.i, align 8, !dbg !227, !tbaa !59, !noalias !126
  %indvars.iv.next19.i = add nuw nsw i64 %indvars.iv18.i, 1, !dbg !228
  call void @llvm.dbg.value(metadata i32 undef, metadata !153, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)) #8, !dbg !155
  %41 = load i64, i64* %maxheight, align 8, !dbg !161, !tbaa !59, !noalias !126
  %cmp8.i = icmp sgt i64 %41, %indvars.iv.next19.i, !dbg !165
  call void @llvm.dbg.value(metadata i32 0, metadata !154, metadata !DIExpression()) #8, !dbg !155
  br i1 %cmp8.i, label %for.cond10.preheader.i, label %for.cond106.preheader.i, !dbg !167, !llvm.loop !229

for.cond133.preheader.i:                          ; preds = %for.inc130.i
  call void @llvm.dbg.value(metadata i32 0, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %cmp1349.i = icmp sgt i32 %51, 0, !dbg !231
  br i1 %cmp1349.i, label %for.body136.lr.ph.i, label %omp.inner.for.inc.i, !dbg !234

for.body136.lr.ph.i:                              ; preds = %for.cond133.preheader.i
  %42 = load i64*, i64** %lastKnode, align 8, !dbg !235, !tbaa !55, !noalias !126
  %arrayidx138.i = getelementptr inbounds i64, i64* %42, i64 %indvars.iv24.i, !dbg !235
  %43 = load i64, i64* %arrayidx138.i, align 8, !dbg !235, !tbaa !59, !noalias !126
  %44 = load i32*, i32** %end, align 8, !dbg !235, !tbaa !55, !noalias !126
  %arrayidx144.i = getelementptr inbounds i32, i32* %44, i64 %indvars.iv24.i, !dbg !235
  %45 = load i32*, i32** %recstart, align 8, !dbg !238, !noalias !126
  %arrayidx155.i = getelementptr inbounds i32, i32* %45, i64 %indvars.iv24.i, !dbg !238
  %46 = load i32*, i32** %reclength, align 8, !dbg !238, !noalias !126
  %arrayidx159.i = getelementptr inbounds i32, i32* %46, i64 %indvars.iv24.i, !dbg !238
  br label %for.body136.i, !dbg !234

for.body109.i:                                    ; preds = %for.inc130.i, %for.body109.lr.ph.i
  %47 = phi i32 [ %12, %for.body109.lr.ph.i ], [ %51, %for.inc130.i ]
  %indvars.iv20.i = phi i64 [ 0, %for.body109.lr.ph.i ], [ %indvars.iv.next21.i, %for.inc130.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv20.i, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %arrayidx115.i = getelementptr inbounds %struct.knode, %struct.knode* %22, i64 %24, i32 2, i64 %indvars.iv20.i, !dbg !240
  %48 = load i32, i32* %arrayidx115.i, align 4, !dbg !240, !tbaa !61, !noalias !126
  %49 = load i32, i32* %arrayidx117.i, align 4, !dbg !241, !tbaa !61, !noalias !126
  %cmp118.i = icmp eq i32 %48, %49, !dbg !242
  br i1 %cmp118.i, label %if.then120.i, label %for.inc130.i, !dbg !243

if.then120.i:                                     ; preds = %for.body109.i
  %arrayidx126.i = getelementptr inbounds %struct.knode, %struct.knode* %22, i64 %24, i32 1, i64 %indvars.iv20.i, !dbg !244
  %50 = load i32, i32* %arrayidx126.i, align 4, !dbg !244, !tbaa !61, !noalias !126
  store i32 %50, i32* %arrayidx128.i, align 4, !dbg !245, !tbaa !61, !noalias !126
  %.pre27.i = load i32, i32* %threadsPerBlock, align 4, !dbg !246, !tbaa !61, !noalias !126
  br label %for.inc130.i, !dbg !247

for.inc130.i:                                     ; preds = %if.then120.i, %for.body109.i
  %51 = phi i32 [ %47, %for.body109.i ], [ %.pre27.i, %if.then120.i ], !dbg !246
  %indvars.iv.next21.i = add nuw nsw i64 %indvars.iv20.i, 1, !dbg !248
  call void @llvm.dbg.value(metadata i32 undef, metadata !154, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)) #8, !dbg !155
  %52 = sext i32 %51 to i64, !dbg !185
  %cmp107.i = icmp slt i64 %indvars.iv.next21.i, %52, !dbg !185
  br i1 %cmp107.i, label %for.body109.i, label %for.cond133.preheader.i, !dbg !188, !llvm.loop !249

for.body136.i:                                    ; preds = %for.inc161.i, %for.body136.lr.ph.i
  %53 = phi i32 [ %51, %for.body136.lr.ph.i ], [ %58, %for.inc161.i ]
  %indvars.iv22.i = phi i64 [ 0, %for.body136.lr.ph.i ], [ %indvars.iv.next23.i, %for.inc161.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv22.i, metadata !154, metadata !DIExpression()) #8, !dbg !155
  %arrayidx142.i = getelementptr inbounds %struct.knode, %struct.knode* %22, i64 %43, i32 2, i64 %indvars.iv22.i, !dbg !251
  %54 = load i32, i32* %arrayidx142.i, align 4, !dbg !251, !tbaa !61, !noalias !126
  %55 = load i32, i32* %arrayidx144.i, align 4, !dbg !252, !tbaa !61, !noalias !126
  %cmp145.i = icmp eq i32 %54, %55, !dbg !253
  br i1 %cmp145.i, label %if.then147.i, label %for.inc161.i, !dbg !254

if.then147.i:                                     ; preds = %for.body136.i
  %arrayidx153.i = getelementptr inbounds %struct.knode, %struct.knode* %22, i64 %43, i32 1, i64 %indvars.iv22.i, !dbg !255
  %56 = load i32, i32* %arrayidx153.i, align 4, !dbg !255, !tbaa !61, !noalias !126
  %57 = load i32, i32* %arrayidx155.i, align 4, !dbg !256, !tbaa !61, !noalias !126
  %sub156.i = add i32 %56, 1, !dbg !257
  %add157.i = sub i32 %sub156.i, %57, !dbg !258
  store i32 %add157.i, i32* %arrayidx159.i, align 4, !dbg !259, !tbaa !61, !noalias !126
  %.pre28.i = load i32, i32* %threadsPerBlock, align 4, !dbg !260, !tbaa !61, !noalias !126
  br label %for.inc161.i, !dbg !261

for.inc161.i:                                     ; preds = %if.then147.i, %for.body136.i
  %58 = phi i32 [ %53, %for.body136.i ], [ %.pre28.i, %if.then147.i ], !dbg !260
  %indvars.iv.next23.i = add nuw nsw i64 %indvars.iv22.i, 1, !dbg !262
  call void @llvm.dbg.value(metadata i32 undef, metadata !154, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)) #8, !dbg !155
  %59 = sext i32 %58 to i64, !dbg !231
  %cmp134.i = icmp slt i64 %indvars.iv.next23.i, %59, !dbg !231
  br i1 %cmp134.i, label %for.body136.i, label %omp.inner.for.inc.i, !dbg !234, !llvm.loop !263

omp.inner.for.inc.i:                              ; preds = %for.inc161.i, %for.cond133.preheader.i, %for.cond106.preheader.i
  %indvars.iv.next25.i = add nsw i64 %indvars.iv24.i, 1, !dbg !158
  call void @llvm.dbg.value(metadata i32 undef, metadata !146, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)) #8, !dbg !155
  %60 = load i32, i32* %.omp.ub.i, align 4, !dbg !159, !tbaa !61, !noalias !126
  call void @llvm.dbg.value(metadata i32 %60, metadata !150, metadata !DIExpression()) #8, !dbg !155
  %61 = sext i32 %60 to i64, !dbg !158
  %cmp6.i = icmp slt i64 %indvars.iv24.i, %61, !dbg !158
  br i1 %cmp6.i, label %for.cond.preheader.i, label %omp.loop.exit.i, !dbg !158, !llvm.loop !265

omp.loop.exit.i:                                  ; preds = %omp.inner.for.inc.i, %omp.precond.then.i
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @2, i64 0, i64 0), i8** %6, align 8, !dbg !160, !tbaa !72, !noalias !126
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %7) #8, !dbg !160, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8, !dbg !160, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !160, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !160, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !160, !noalias !126
  br label %.omp_outlined._debug__.exit, !dbg !160

.omp_outlined._debug__.exit:                      ; preds = %entry, %omp.loop.exit.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !267
  ret void, !dbg !268
}

declare !callback !269 dso_local void @__kmpc_fork_call(%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) local_unnamed_addr

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #6

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #7

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 9.0.1 (branches/release_90 375507)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, nameTableKind: None)
!1 = !DIFile(filename: "./kernel/kernel_cpu_2.c", directory: "/scratch/ishitac/xstack-benchmark/rodinia/openmp/b+tree")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 9.0.1 (branches/release_90 375507)"}
!9 = distinct !DISubprogram(name: "kernel_cpu_2", scope: !1, file: !1, line: 39, type: !10, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !30)
!10 = !DISubroutineType(types: !11)
!11 = !{null, !12, !13, !27, !12, !27, !12, !28, !28, !28, !28, !29, !29, !29, !29}
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "knode", file: !15, line: 122, baseType: !16)
!15 = !DIFile(filename: "./kernel/../common.h", directory: "/scratch/ishitac/xstack-benchmark/rodinia/openmp/b+tree")
!16 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "knode", file: !15, line: 116, size: 32672, elements: !17)
!17 = !{!18, !19, !23, !24, !26}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !16, file: !15, line: 117, baseType: !12, size: 32)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !16, file: !15, line: 118, baseType: !20, size: 16288, offset: 32)
!20 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 16288, elements: !21)
!21 = !{!22}
!22 = !DISubrange(count: 509)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !16, file: !15, line: 119, baseType: !20, size: 16288, offset: 16320)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "is_leaf", scope: !16, file: !15, line: 120, baseType: !25, size: 8, offset: 32608)
!25 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "num_keys", scope: !16, file: !15, line: 121, baseType: !12, size: 32, offset: 32640)
!27 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!30 = !{!31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !47, !48, !49, !50, !51, !52, !53}
!31 = !DILocalVariable(name: "cores_arg", arg: 1, scope: !9, file: !1, line: 39, type: !12)
!32 = !DILocalVariable(name: "knodes", arg: 2, scope: !9, file: !1, line: 41, type: !13)
!33 = !DILocalVariable(name: "knodes_elem", arg: 3, scope: !9, file: !1, line: 42, type: !27)
!34 = !DILocalVariable(name: "order", arg: 4, scope: !9, file: !1, line: 44, type: !12)
!35 = !DILocalVariable(name: "maxheight", arg: 5, scope: !9, file: !1, line: 45, type: !27)
!36 = !DILocalVariable(name: "count", arg: 6, scope: !9, file: !1, line: 46, type: !12)
!37 = !DILocalVariable(name: "currKnode", arg: 7, scope: !9, file: !1, line: 48, type: !28)
!38 = !DILocalVariable(name: "offset", arg: 8, scope: !9, file: !1, line: 49, type: !28)
!39 = !DILocalVariable(name: "lastKnode", arg: 9, scope: !9, file: !1, line: 50, type: !28)
!40 = !DILocalVariable(name: "offset_2", arg: 10, scope: !9, file: !1, line: 51, type: !28)
!41 = !DILocalVariable(name: "start", arg: 11, scope: !9, file: !1, line: 52, type: !29)
!42 = !DILocalVariable(name: "end", arg: 12, scope: !9, file: !1, line: 53, type: !29)
!43 = !DILocalVariable(name: "recstart", arg: 13, scope: !9, file: !1, line: 54, type: !29)
!44 = !DILocalVariable(name: "reclength", arg: 14, scope: !9, file: !1, line: 55, type: !29)
!45 = !DILocalVariable(name: "time0", scope: !9, file: !1, line: 63, type: !46)
!46 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!47 = !DILocalVariable(name: "time1", scope: !9, file: !1, line: 64, type: !46)
!48 = !DILocalVariable(name: "time2", scope: !9, file: !1, line: 65, type: !46)
!49 = !DILocalVariable(name: "i", scope: !9, file: !1, line: 68, type: !12)
!50 = !DILocalVariable(name: "max_nthreads", scope: !9, file: !1, line: 76, type: !12)
!51 = !DILocalVariable(name: "threadsPerBlock", scope: !9, file: !1, line: 82, type: !12)
!52 = !DILocalVariable(name: "thid", scope: !9, file: !1, line: 92, type: !12)
!53 = !DILocalVariable(name: "bid", scope: !9, file: !1, line: 93, type: !12)
!54 = !DILocation(line: 0, scope: !9)
!55 = !{!56, !56, i64 0}
!56 = !{!"any pointer", !57, i64 0}
!57 = !{!"omnipotent char", !58, i64 0}
!58 = !{!"Simple C/C++ TBAA"}
!59 = !{!60, !60, i64 0}
!60 = !{!"long", !57, i64 0}
!61 = !{!62, !62, i64 0}
!62 = !{!"int", !57, i64 0}
!63 = !DILocation(line: 70, column: 10, scope: !9)
!64 = !DILocation(line: 77, column: 17, scope: !9)
!65 = !DILocation(line: 79, column: 2, scope: !9)
!66 = !DILocation(line: 82, column: 2, scope: !9)
!67 = !DILocation(line: 83, column: 26, scope: !9)
!68 = !DILocation(line: 83, column: 20, scope: !9)
!69 = !DILocation(line: 83, column: 18, scope: !9)
!70 = !DILocation(line: 85, column: 10, scope: !9)
!71 = !DILocation(line: 96, column: 2, scope: !9)
!72 = !{!73, !56, i64 16}
!73 = !{!"ident_t", !62, i64 0, !62, i64 4, !62, i64 8, !62, i64 12, !56, i64 16}
!74 = !DILocation(line: 152, column: 10, scope: !9)
!75 = !DILocation(line: 158, column: 2, scope: !9)
!76 = !DILocation(line: 160, column: 72, scope: !9)
!77 = !DILocation(line: 160, column: 58, scope: !9)
!78 = !DILocation(line: 160, column: 80, scope: !9)
!79 = !DILocation(line: 160, column: 129, scope: !9)
!80 = !DILocation(line: 160, column: 115, scope: !9)
!81 = !DILocation(line: 160, column: 113, scope: !9)
!82 = !DILocation(line: 160, column: 137, scope: !9)
!83 = !DILocation(line: 160, column: 91, scope: !9)
!84 = !DILocation(line: 160, column: 2, scope: !9)
!85 = !DILocation(line: 161, column: 72, scope: !9)
!86 = !DILocation(line: 161, column: 58, scope: !9)
!87 = !DILocation(line: 161, column: 80, scope: !9)
!88 = !DILocation(line: 161, column: 113, scope: !9)
!89 = !DILocation(line: 161, column: 137, scope: !9)
!90 = !DILocation(line: 161, column: 91, scope: !9)
!91 = !DILocation(line: 161, column: 2, scope: !9)
!92 = !DILocation(line: 163, column: 2, scope: !9)
!93 = !DILocation(line: 164, column: 56, scope: !9)
!94 = !DILocation(line: 164, column: 34, scope: !9)
!95 = !DILocation(line: 164, column: 2, scope: !9)
!96 = !DILocation(line: 166, column: 1, scope: !9)
!97 = distinct !DISubprogram(name: ".omp_outlined.", scope: !1, file: !1, line: 97, type: !98, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !109)
!98 = !DISubroutineType(types: !99)
!99 = !{null, !100, !100, !104, !105, !104, !106, !107, !108, !105, !107, !107, !108, !107, !108, !108}
!100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!101 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!104 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !12, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !27, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !13, size: 64)
!107 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !28, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !29, size: 64)
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124}
!110 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !97, type: !100, flags: DIFlagArtificial)
!111 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !97, type: !100, flags: DIFlagArtificial)
!112 = !DILocalVariable(name: "count", arg: 3, scope: !97, type: !104, flags: DIFlagArtificial)
!113 = !DILocalVariable(name: "maxheight", arg: 4, scope: !97, type: !105, flags: DIFlagArtificial)
!114 = !DILocalVariable(name: "threadsPerBlock", arg: 5, scope: !97, type: !104, flags: DIFlagArtificial)
!115 = !DILocalVariable(name: "knodes", arg: 6, scope: !97, type: !106, flags: DIFlagArtificial)
!116 = !DILocalVariable(name: "currKnode", arg: 7, scope: !97, type: !107, flags: DIFlagArtificial)
!117 = !DILocalVariable(name: "start", arg: 8, scope: !97, type: !108, flags: DIFlagArtificial)
!118 = !DILocalVariable(name: "knodes_elem", arg: 9, scope: !97, type: !105, flags: DIFlagArtificial)
!119 = !DILocalVariable(name: "offset", arg: 10, scope: !97, type: !107, flags: DIFlagArtificial)
!120 = !DILocalVariable(name: "lastKnode", arg: 11, scope: !97, type: !107, flags: DIFlagArtificial)
!121 = !DILocalVariable(name: "end", arg: 12, scope: !97, type: !108, flags: DIFlagArtificial)
!122 = !DILocalVariable(name: "offset_2", arg: 13, scope: !97, type: !107, flags: DIFlagArtificial)
!123 = !DILocalVariable(name: "recstart", arg: 14, scope: !97, type: !108, flags: DIFlagArtificial)
!124 = !DILocalVariable(name: "reclength", arg: 15, scope: !97, type: !108, flags: DIFlagArtificial)
!125 = !DILocation(line: 0, scope: !97)
!126 = !{!127}
!127 = distinct !{!127, !128, !".omp_outlined._debug__: %.global_tid."}
!128 = distinct !{!128, !".omp_outlined._debug__"}
!129 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !130, type: !100, flags: DIFlagArtificial)
!130 = distinct !DISubprogram(name: ".omp_outlined._debug__", scope: !1, file: !1, line: 97, type: !98, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !131)
!131 = !{!129, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !147, !148, !149, !150, !151, !152, !153, !154, !148}
!132 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !130, type: !100, flags: DIFlagArtificial)
!133 = !DILocalVariable(name: "count", arg: 3, scope: !130, file: !1, line: 46, type: !104)
!134 = !DILocalVariable(name: "maxheight", arg: 4, scope: !130, file: !1, line: 45, type: !105)
!135 = !DILocalVariable(name: "threadsPerBlock", arg: 5, scope: !130, file: !1, line: 82, type: !104)
!136 = !DILocalVariable(name: "knodes", arg: 6, scope: !130, file: !1, line: 41, type: !106)
!137 = !DILocalVariable(name: "currKnode", arg: 7, scope: !130, file: !1, line: 48, type: !107)
!138 = !DILocalVariable(name: "start", arg: 8, scope: !130, file: !1, line: 52, type: !108)
!139 = !DILocalVariable(name: "knodes_elem", arg: 9, scope: !130, file: !1, line: 42, type: !105)
!140 = !DILocalVariable(name: "offset", arg: 10, scope: !130, file: !1, line: 49, type: !107)
!141 = !DILocalVariable(name: "lastKnode", arg: 11, scope: !130, file: !1, line: 50, type: !107)
!142 = !DILocalVariable(name: "end", arg: 12, scope: !130, file: !1, line: 53, type: !108)
!143 = !DILocalVariable(name: "offset_2", arg: 13, scope: !130, file: !1, line: 51, type: !107)
!144 = !DILocalVariable(name: "recstart", arg: 14, scope: !130, file: !1, line: 54, type: !108)
!145 = !DILocalVariable(name: "reclength", arg: 15, scope: !130, file: !1, line: 55, type: !108)
!146 = !DILocalVariable(name: ".omp.iv", scope: !130, type: !12, flags: DIFlagArtificial)
!147 = !DILocalVariable(name: ".capture_expr.", scope: !130, type: !12, flags: DIFlagArtificial)
!148 = !DILocalVariable(name: "bid", scope: !130, type: !12, flags: DIFlagArtificial)
!149 = !DILocalVariable(name: ".omp.lb", scope: !130, type: !12, flags: DIFlagArtificial)
!150 = !DILocalVariable(name: ".omp.ub", scope: !130, type: !12, flags: DIFlagArtificial)
!151 = !DILocalVariable(name: ".omp.stride", scope: !130, type: !12, flags: DIFlagArtificial)
!152 = !DILocalVariable(name: ".omp.is_last", scope: !130, type: !12, flags: DIFlagArtificial)
!153 = !DILocalVariable(name: "i", scope: !130, type: !12, flags: DIFlagArtificial)
!154 = !DILocalVariable(name: "thid", scope: !130, type: !12, flags: DIFlagArtificial)
!155 = !DILocation(line: 0, scope: !130, inlinedAt: !156)
!156 = distinct !DILocation(line: 97, column: 2, scope: !97)
!157 = !DILocation(line: 97, column: 21, scope: !130, inlinedAt: !156)
!158 = !DILocation(line: 97, column: 2, scope: !130, inlinedAt: !156)
!159 = !DILocation(line: 97, column: 6, scope: !130, inlinedAt: !156)
!160 = !DILocation(line: 96, column: 2, scope: !130, inlinedAt: !156)
!161 = !DILocation(line: 100, column: 18, scope: !162, inlinedAt: !156)
!162 = distinct !DILexicalBlock(scope: !163, file: !1, line: 100, column: 3)
!163 = distinct !DILexicalBlock(scope: !164, file: !1, line: 100, column: 3)
!164 = distinct !DILexicalBlock(scope: !130, file: !1, line: 97, column: 34)
!165 = !DILocation(line: 100, column: 16, scope: !162, inlinedAt: !156)
!166 = !DILocation(line: 0, scope: !164, inlinedAt: !156)
!167 = !DILocation(line: 100, column: 3, scope: !163, inlinedAt: !156)
!168 = !DILocation(line: 0, scope: !169, inlinedAt: !156)
!169 = distinct !DILexicalBlock(scope: !170, file: !1, line: 103, column: 4)
!170 = distinct !DILexicalBlock(scope: !171, file: !1, line: 103, column: 4)
!171 = distinct !DILexicalBlock(scope: !162, file: !1, line: 100, column: 33)
!172 = !DILocation(line: 0, scope: !173, inlinedAt: !156)
!173 = distinct !DILexicalBlock(scope: !174, file: !1, line: 105, column: 8)
!174 = distinct !DILexicalBlock(scope: !169, file: !1, line: 103, column: 49)
!175 = !DILocation(line: 0, scope: !176, inlinedAt: !156)
!176 = distinct !DILexicalBlock(scope: !177, file: !1, line: 109, column: 60)
!177 = distinct !DILexicalBlock(scope: !178, file: !1, line: 109, column: 9)
!178 = distinct !DILexicalBlock(scope: !173, file: !1, line: 105, column: 112)
!179 = !DILocation(line: 0, scope: !180, inlinedAt: !156)
!180 = distinct !DILexicalBlock(scope: !174, file: !1, line: 113, column: 8)
!181 = !DILocation(line: 0, scope: !182, inlinedAt: !156)
!182 = distinct !DILexicalBlock(scope: !183, file: !1, line: 117, column: 60)
!183 = distinct !DILexicalBlock(scope: !184, file: !1, line: 117, column: 9)
!184 = distinct !DILexicalBlock(scope: !180, file: !1, line: 113, column: 108)
!185 = !DILocation(line: 131, column: 22, scope: !186, inlinedAt: !156)
!186 = distinct !DILexicalBlock(scope: !187, file: !1, line: 131, column: 3)
!187 = distinct !DILexicalBlock(scope: !164, file: !1, line: 131, column: 3)
!188 = !DILocation(line: 131, column: 3, scope: !187, inlinedAt: !156)
!189 = !DILocation(line: 0, scope: !190, inlinedAt: !156)
!190 = distinct !DILexicalBlock(scope: !191, file: !1, line: 134, column: 7)
!191 = distinct !DILexicalBlock(scope: !186, file: !1, line: 131, column: 48)
!192 = !DILocation(line: 0, scope: !193, inlinedAt: !156)
!193 = distinct !DILexicalBlock(scope: !190, file: !1, line: 134, column: 55)
!194 = !DILocation(line: 103, column: 4, scope: !170, inlinedAt: !156)
!195 = !DILocation(line: 105, column: 16, scope: !173, inlinedAt: !156)
!196 = !DILocation(line: 105, column: 9, scope: !173, inlinedAt: !156)
!197 = !DILocation(line: 105, column: 43, scope: !173, inlinedAt: !156)
!198 = !DILocation(line: 105, column: 58, scope: !173, inlinedAt: !156)
!199 = !DILocation(line: 105, column: 62, scope: !173, inlinedAt: !156)
!200 = !DILocation(line: 105, column: 98, scope: !173, inlinedAt: !156)
!201 = !DILocation(line: 105, column: 8, scope: !174, inlinedAt: !156)
!202 = !DILocation(line: 109, column: 9, scope: !177, inlinedAt: !156)
!203 = !DILocation(line: 109, column: 48, scope: !177, inlinedAt: !156)
!204 = !DILocation(line: 109, column: 46, scope: !177, inlinedAt: !156)
!205 = !DILocation(line: 109, column: 9, scope: !178, inlinedAt: !156)
!206 = !DILocation(line: 110, column: 19, scope: !176, inlinedAt: !156)
!207 = !DILocation(line: 111, column: 6, scope: !176, inlinedAt: !156)
!208 = !DILocation(line: 113, column: 16, scope: !180, inlinedAt: !156)
!209 = !DILocation(line: 113, column: 9, scope: !180, inlinedAt: !156)
!210 = !DILocation(line: 113, column: 43, scope: !180, inlinedAt: !156)
!211 = !DILocation(line: 113, column: 56, scope: !180, inlinedAt: !156)
!212 = !DILocation(line: 113, column: 60, scope: !180, inlinedAt: !156)
!213 = !DILocation(line: 113, column: 96, scope: !180, inlinedAt: !156)
!214 = !DILocation(line: 113, column: 8, scope: !174, inlinedAt: !156)
!215 = !DILocation(line: 117, column: 9, scope: !183, inlinedAt: !156)
!216 = !DILocation(line: 117, column: 48, scope: !183, inlinedAt: !156)
!217 = !DILocation(line: 117, column: 46, scope: !183, inlinedAt: !156)
!218 = !DILocation(line: 117, column: 9, scope: !184, inlinedAt: !156)
!219 = !DILocation(line: 118, column: 21, scope: !182, inlinedAt: !156)
!220 = !DILocation(line: 119, column: 6, scope: !182, inlinedAt: !156)
!221 = !DILocation(line: 103, column: 23, scope: !169, inlinedAt: !156)
!222 = distinct !{!222, !194, !223}
!223 = !DILocation(line: 122, column: 4, scope: !170, inlinedAt: !156)
!224 = !DILocation(line: 125, column: 21, scope: !171, inlinedAt: !156)
!225 = !DILocation(line: 125, column: 19, scope: !171, inlinedAt: !156)
!226 = !DILocation(line: 126, column: 21, scope: !171, inlinedAt: !156)
!227 = !DILocation(line: 126, column: 19, scope: !171, inlinedAt: !156)
!228 = !DILocation(line: 100, column: 30, scope: !162, inlinedAt: !156)
!229 = distinct !{!229, !167, !230}
!230 = !DILocation(line: 128, column: 3, scope: !163, inlinedAt: !156)
!231 = !DILocation(line: 141, column: 22, scope: !232, inlinedAt: !156)
!232 = distinct !DILexicalBlock(scope: !233, file: !1, line: 141, column: 3)
!233 = distinct !DILexicalBlock(scope: !164, file: !1, line: 141, column: 3)
!234 = !DILocation(line: 141, column: 3, scope: !233, inlinedAt: !156)
!235 = !DILocation(line: 0, scope: !236, inlinedAt: !156)
!236 = distinct !DILexicalBlock(scope: !237, file: !1, line: 144, column: 7)
!237 = distinct !DILexicalBlock(scope: !232, file: !1, line: 141, column: 48)
!238 = !DILocation(line: 0, scope: !239, inlinedAt: !156)
!239 = distinct !DILexicalBlock(scope: !236, file: !1, line: 144, column: 53)
!240 = !DILocation(line: 134, column: 7, scope: !190, inlinedAt: !156)
!241 = !DILocation(line: 134, column: 44, scope: !190, inlinedAt: !156)
!242 = !DILocation(line: 134, column: 41, scope: !190, inlinedAt: !156)
!243 = !DILocation(line: 134, column: 7, scope: !191, inlinedAt: !156)
!244 = !DILocation(line: 135, column: 21, scope: !193, inlinedAt: !156)
!245 = !DILocation(line: 135, column: 19, scope: !193, inlinedAt: !156)
!246 = !DILocation(line: 131, column: 24, scope: !186, inlinedAt: !156)
!247 = !DILocation(line: 136, column: 4, scope: !193, inlinedAt: !156)
!248 = !DILocation(line: 131, column: 45, scope: !186, inlinedAt: !156)
!249 = distinct !{!249, !188, !250}
!250 = !DILocation(line: 138, column: 3, scope: !187, inlinedAt: !156)
!251 = !DILocation(line: 144, column: 7, scope: !236, inlinedAt: !156)
!252 = !DILocation(line: 144, column: 44, scope: !236, inlinedAt: !156)
!253 = !DILocation(line: 144, column: 41, scope: !236, inlinedAt: !156)
!254 = !DILocation(line: 144, column: 7, scope: !237, inlinedAt: !156)
!255 = !DILocation(line: 145, column: 22, scope: !239, inlinedAt: !156)
!256 = !DILocation(line: 145, column: 61, scope: !239, inlinedAt: !156)
!257 = !DILocation(line: 145, column: 59, scope: !239, inlinedAt: !156)
!258 = !DILocation(line: 145, column: 74, scope: !239, inlinedAt: !156)
!259 = !DILocation(line: 145, column: 20, scope: !239, inlinedAt: !156)
!260 = !DILocation(line: 141, column: 24, scope: !232, inlinedAt: !156)
!261 = !DILocation(line: 146, column: 4, scope: !239, inlinedAt: !156)
!262 = !DILocation(line: 141, column: 45, scope: !232, inlinedAt: !156)
!263 = distinct !{!263, !234, !264}
!264 = !DILocation(line: 148, column: 3, scope: !233, inlinedAt: !156)
!265 = distinct !{!265, !160, !266}
!266 = !DILocation(line: 96, column: 44, scope: !130, inlinedAt: !156)
!267 = !DILocation(line: 150, column: 2, scope: !130, inlinedAt: !156)
!268 = !DILocation(line: 97, column: 2, scope: !97)
!269 = !{!270}
!270 = !{i64 2, i64 -1, i64 -1, i1 true}
