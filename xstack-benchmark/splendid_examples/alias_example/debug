SUSAN: adding utaskdefine internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br i1 %polly.hasIteration, label %polly.par.exit, label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit, %polly.par.setup
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: argInput 4158: i64 0
SUSAN: arg 4158: i64 %polly.kmpc.lb
SUSAN: argInput 4158: i64 998
SUSAN: arg 4158: i64 %polly.kmpc.ub
SUSAN: argInput 4158: i64 1
SUSAN: arg 4158: i64 %polly.kmpc.inc
SUSAN: argInput 4158:   %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: arg 4158: i8* %polly.kmpc.shared
SUSAN: found store for struct 9066:   store double* %B, double** %polly.subfn.storeaddr.B, align 8
SUSAN: found store for struct 9066:   store double* %A, double** %polly.subfn.storeaddr.A, align 8
SUSAN: found store for struct 9066:   store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
SUSAN: found store for struct 9066:   store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
OMP FUNC: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br i1 %polly.hasIteration, label %polly.par.exit, label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit, %polly.par.setup
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: added stderr to delete insts
SUSAN: added stderr to delete insts
SUSAN: added stderr to delete insts
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: latch 
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

Loop: Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

none omp loop ub: i64 1000
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

none omp loop ub:   %11 = sext i32 %tsteps to i64
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: latch 
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

Loop: Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

none omp loop ub: i32 %tsteps
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: latch 
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

Loop: Loop at depth 2 containing: %for.body3<header><latch><exiting>

none omp loop ub: i64 999
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

isomp: 0
Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

isomp: 0
Loop: Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

isomp: 0
Loop: Loop at depth 2 containing: %for.body3<header><latch><exiting>

isomp: 0
SUSAN: opnd0i32 %tsteps
SUSAN: opnd1i32 0
SUSAN: LP->ub: i64 1000
SUSAN: upperbound: i64 1000
SUSAN: LP->ub:   %11 = sext i32 %tsteps to i64
SUSAN: upperbound:   %11 = sext i32 %tsteps to i64
SUSAN: deadbranch:   br i1 %cmp46, label %for.cond1.preheader.preheader, label %polly.merge_new_and_old, !dbg !43
SUSAN: LP->ub: i32 %tsteps
SUSAN: upperbound: i32 %tsteps
SUSAN: deadbranch:   br i1 %cmp46, label %for.cond1.preheader.preheader, label %polly.merge_new_and_old, !dbg !43
SUSAN: LP->ub: i64 999
SUSAN: upperbound: i64 999
SUSAN: opnd0  %rem = urem i64 %i15.044, 20, !dbg !75
SUSAN: opnd1i64 0
SUSAN: LP->ub: i64 1000
SUSAN: upperbound: i64 1000
SUSAN: LP->ub:   %11 = sext i32 %tsteps to i64
SUSAN: upperbound:   %11 = sext i32 %tsteps to i64
SUSAN: LP->ub: i32 %tsteps
SUSAN: upperbound: i32 %tsteps
SUSAN: LP->ub: i64 999
SUSAN: upperbound: i64 999
SUSAN: opnd0i32 %tsteps
SUSAN: opnd1i32 0
SUSAN: LP->ub: i64 1000
SUSAN: upperbound: i64 1000
SUSAN: LP->ub:   %11 = sext i32 %tsteps to i64
SUSAN: upperbound:   %11 = sext i32 %tsteps to i64
SUSAN: deadbranch:   br i1 %polly.loop_guard, label %polly.loop_header.preheader, label %polly.merge_new_and_old
SUSAN: LP->ub: i32 %tsteps
SUSAN: upperbound: i32 %tsteps
SUSAN: deadbranch:   br i1 %polly.loop_guard, label %polly.loop_header.preheader, label %polly.merge_new_and_old
SUSAN: LP->ub: i64 999
SUSAN: upperbound: i64 999
SUSAN: removing branch target:   br i1 %cmp46, label %for.cond1.preheader.preheader, label %polly.merge_new_and_old, !dbg !43
SUSAN: inserting succBB: polly.merge_new_and_old
SUSAN: removing succBB
polly.merge_new_and_old:                          ; preds = %polly.start, %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit, %entry.split
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

SUSAN: removing branch target:   br i1 %polly.loop_guard, label %polly.loop_header.preheader, label %polly.merge_new_and_old
SUSAN: inserting succBB: polly.merge_new_and_old
SUSAN: removing succBB
polly.merge_new_and_old:                          ; preds = %polly.start, %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit, %entry.split
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

SUSAN: BB:
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

SUSAN: BB:
entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

SUSAN: BB:
for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

SUSAN: BB:
for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

SUSAN: BB:
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

SUSAN: BB:
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

SUSAN: BB:
for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

SUSAN: BB:
polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

SUSAN: BB:
polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

SUSAN: BB:
polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

SUSAN: BB:
for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

SUSAN: BB:
if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

SUSAN: BB:
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

SUSAN: BB:
polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

SUSAN: BB:
polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

SUSAN: BB:
polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN exitBB: 
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN exitBB: 
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN exitBB: 
polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header

creating subregion: entry
=================SUSAN: START OF marking region : entry==================
SUSAN: found latchpolly.loop_header
SUSAN: found latchfor.body3
SUSAN: found latchfor.inc12
=================SUSAN: END OF marking region : entry==================
SUSAN: found latchpolly.loop_header
SUSAN: found latchfor.body3
SUSAN: found latchfor.inc12
creating subregion: for.body18
=================SUSAN: START OF marking region : for.body18==================
=================SUSAN: END OF marking region : for.body18==================
SUSAN: found latchfor.inc22
SUSAN: found latchfor.inc22
SUSAN: Node: topRegion
then SubNodes: 
entry
for.body18
else SubNodes: 
current region then bbs:
entry
polly.merge_new_and_old
for.body18
for.inc22
for.cond.cleanup
current region else bbs:
current region then edges:
polly.merge_new_and_old.loopexit -> polly.merge_new_and_old
polly.merge_new_and_old -> for.body18
for.body18 -> for.inc22
polly.merge_new_and_old.loopexit1 -> polly.merge_new_and_old
if.then -> for.inc22
for.inc22 -> for.cond.cleanup
current region else edges:
SUSAN: Node entry
then SubNodes: 
else SubNodes: 
current region then bbs:
polly.start
polly.loop_header.preheader
polly.loop_header
polly.merge_new_and_old.loopexit
current region else bbs:
entry.split
for.cond1.preheader.preheader
for.cond1.preheader
for.body3
for.inc12
polly.merge_new_and_old.loopexit1
current region then edges:
entry -> polly.start
polly.start -> polly.loop_header.preheader
polly.loop_header.preheader -> polly.loop_header
polly.loop_header -> polly.merge_new_and_old.loopexit
current region else edges:
entry -> entry.split
entry.split -> for.cond1.preheader.preheader
for.cond1.preheader.preheader -> for.cond1.preheader
for.cond1.preheader -> for.body3
for.body3 -> for.inc12
for.inc12 -> polly.merge_new_and_old.loopexit1
SUSAN: Node for.body18
then SubNodes: 
else SubNodes: 
current region then bbs:
if.then
current region else bbs:
current region then edges:
for.body18 -> if.then
current region else edges:
SUSAN: BB entry times2bePrinted: 1
SUSAN: BB entry.split times2bePrinted: 1
SUSAN: BB for.cond1.preheader.preheader times2bePrinted: 1
SUSAN: BB for.cond1.preheader times2bePrinted: 1
SUSAN: BB for.body3 times2bePrinted: 1
SUSAN: BB for.inc12 times2bePrinted: 1
SUSAN: BB for.cond.cleanup times2bePrinted: 1
SUSAN: BB polly.merge_new_and_old.loopexit times2bePrinted: 1
SUSAN: BB polly.merge_new_and_old.loopexit1 times2bePrinted: 1
SUSAN: BB polly.merge_new_and_old times2bePrinted: 1
SUSAN: BB for.body18 times2bePrinted: 1
SUSAN: BB if.then times2bePrinted: 1
SUSAN: BB for.inc22 times2bePrinted: 1
SUSAN: BB polly.start times2bePrinted: 1
SUSAN: BB polly.loop_header.preheader times2bePrinted: 1
SUSAN: BB polly.loop_header times2bePrinted: 1
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
global: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
type: [8 x i8]
global: @.loc.dummy = private constant %struct.ident_t { i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.ident, i32 0, i32 0) }, align 8
type: %struct.ident_t = type { i32, i32, i32, i32, i8* }
global: @.str.ident = private constant [23 x i8] c"Source location dummy.\00", align 1
type: [23 x i8]
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
SUSAN: CI at 1400:   %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
SUSAN: CI at 1400:   %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
SUSAN: CI at 1400:   %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
SUSAN: CI at 1400:   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 2 containing: %for.body3<header><latch><exiting>

currInst :  %polly.access.A = getelementptr double, double* %A, i64 1000
currInst :  %0 = icmp ule double* %polly.access.A, %polly.access.B
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %polly.access.B = getelementptr double, double* %B, i64 1
currInst :  %0 = icmp ule double* %polly.access.A, %polly.access.B
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %0 = icmp ule double* %polly.access.A, %polly.access.B
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %polly.access.B51 = getelementptr double, double* %B, i64 999
currInst :  %1 = icmp ule double* %polly.access.B51, %A
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %1 = icmp ule double* %polly.access.B51, %A
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %2 = or i1 %0, %1
currInst :  br i1 %2, label %polly.start, label %entry.split
currInst :  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
currInst :  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
SUSAN: add () to inst:   %3 = add nsw i64 %indvars.iv, -1, !dbg !46
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
currInst :  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
currInst :  %add = fadd double %4, %5, !dbg !54
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
currInst :  %add = fadd double %4, %5, !dbg !54
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
currInst :  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
currInst :  %add = fadd double %4, %5, !dbg !54
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
currInst :  %add = fadd double %4, %5, !dbg !54
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %add = fadd double %4, %5, !dbg !54
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
currInst :  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
currInst :  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
SUSAN: add () to inst:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
currInst :  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
currInst :  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %add9 = fadd double %add, %6, !dbg !57
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %div = fdiv double %add9, 3.000000e+00, !dbg !58
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
currInst :  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
currInst :  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
currInst :  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62
currInst :  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
currInst :  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
currInst :  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
currInst :  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
currInst :  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65
currInst :  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
currInst :  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
currInst :  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
currInst :  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
currInst :  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
currInst :  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
currInst :  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
currInst :  %rem = urem i64 %i15.044, 20, !dbg !75
currInst :  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
currInst :  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78
currInst :  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
currInst :  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78
currInst :  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
currInst :  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
currInst :  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
currInst :  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
currInst :  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
currInst :  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
currInst :  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
currInst :  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
currInst :  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85
currInst :  %11 = sext i32 %tsteps to i64
currInst :  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
currInst :  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
currInst :  %polly.loop_guard = icmp sgt i32 %tsteps, 0
currInst :  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
currInst :  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
currInst :  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
currInst :  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
currInst :  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
currInst :  store double* %A, double** %polly.subfn.storeaddr.A, align 8
currInst :  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
currInst :  store double* %B, double** %polly.subfn.storeaddr.B, align 8
currInst :  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
currInst :  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
currInst :  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
currInst :  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
currInst :  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
SUSAN: found loop over callInst   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
depth 1
SUSAN: utask: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br i1 %polly.hasIteration, label %polly.par.exit, label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit, %polly.par.setup
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: function 1685: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: function 1685: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: function 1685: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: function 1685: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: argidx: 24
Load:   %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: argidx: 16
Load:   %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: getting value name for: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: found argument 6346: i32 %tsteps
SUSAN: found argument 6346: double* %A
SUSAN: found argument 6346: double* %B
SUSAN: phi related name: t
SUSAN: phi related name: i
SUSAN: getting value name for:   %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
SUSAN: phi related name: _1
SUSAN: phi related name: i
SUSAN: phi related name: i
=========================SUSAN: IR NAMING BEFORE=====================
i32 %tsteps -> tsteps
double* %A -> A
double* %B -> B
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ] -> t
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ] -> i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55 -> i
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64 -> t
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8 -> _1
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8 -> stderr
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ] -> i
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83 -> i
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80 -> _1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80 -> stderr
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1 -> i
SUSAN: inst:  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: inst:  %polly.access.A = getelementptr double, double* %A, i64 1000
SUSAN: inst:  %polly.access.B = getelementptr double, double* %B, i64 1
SUSAN: inst:  %0 = icmp ule double* %polly.access.A, %polly.access.B
SUSAN: inst:  %polly.access.B51 = getelementptr double, double* %B, i64 999
SUSAN: inst:  %1 = icmp ule double* %polly.access.B51, %A
SUSAN: inst:  %2 = or i1 %0, %1
SUSAN: inst:  br i1 %2, label %polly.start, label %entry.split
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
SUSAN: inst:  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
SUSAN: inst:  br label %for.cond1.preheader, !dbg !43
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  br label %for.body3, !dbg !44
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %add = fadd double %4, %5, !dbg !54
i:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %add9 = fadd double %add, %6, !dbg !57
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %div = fdiv double %add9, 3.000000e+00, !dbg !58
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: inst:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
_1:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  ret void, !dbg !68
_1:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br label %polly.merge_new_and_old
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  br label %polly.merge_new_and_old
i:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br label %for.body18, !dbg !69
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %rem = urem i64 %i15.044, 20, !dbg !75
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br label %for.inc22, !dbg !82
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
i:  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
_1:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
_1:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
_1:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85
_1:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
i:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
stderr:  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
t:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
SUSAN: inst:  %11 = sext i32 %tsteps to i64
SUSAN: inst:  %polly.loop_guard = icmp sgt i32 %tsteps, 0
SUSAN: inst:  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
SUSAN: inst:  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
SUSAN: inst:  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
SUSAN: inst:  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
SUSAN: inst:  br label %polly.loop_header
SUSAN: inst:  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  store double* %A, double** %polly.subfn.storeaddr.A, align 8
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  store double* %B, double** %polly.subfn.storeaddr.B, align 8
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
i:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
SUSAN: inst:  br label %for.cond1.preheader.preheader, !dbg !43
SUSAN: inst:  br label %polly.loop_header.preheader
SUSAN: at inst   %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
SUSAN: removinginst2var at 6152:   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80 -> stderr
SUSAN: at inst   %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
SUSAN: removinginst2var at 6152:   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80 -> _1
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
=========================SUSAN: IR NAMING=====================
i32 %tsteps -> tsteps
double* %A -> A
double* %B -> B
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ] -> t
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ] -> i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55 -> i
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64 -> t
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8 -> _1
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8 -> stderr
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ] -> i
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83 -> i
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1 -> i
SUSAN: getting value name for: i32 %tsteps
inst from IRNaming: i32 %tsteps
original name : tsteps
returning name: tsteps
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: adding entry block: 
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

SUSAN: printing bb:entry
SUSAN: emitting branch:   br i1 %2, label %polly.start, label %entry.split
SUSAN: printing GEP:   %polly.access.A = getelementptr double, double* %A, i64 1000
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10029:double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: printing GEP:   %polly.access.B = getelementptr double, double* %B, i64 1
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10029:double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: printing GEP:   %polly.access.B51 = getelementptr double, double* %B, i64 999
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10029:double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
printing BB in emitIfBlockpolly.start
printing BB:polly.startat 7169
SUSAN: emitting branch:   br label %polly.loop_header.preheader
printing unconditional branch   br label %polly.loop_header.preheader
printing BB in emitIfBlockpolly.loop_header.preheader
printing BB:polly.loop_header.preheaderat 7169
SUSAN: emitting branch:   br label %polly.loop_header
printing unconditional branch   br label %polly.loop_header
printing BB in emitIfBlockpolly.loop_header
SUSAN: printing loop polly.loop_header at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: loop block: polly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: condrelatedinst:  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
SUSAN: printing IV  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
SUSAN: declaring 3252:   %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
SUSAN: reconstructed variable counter increment for iv:i
SUSAN: condInst:  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
SUSAN: visiting cast:   %11 = sext i32 %tsteps to i64
SUSAN: getting value name for: i32 %tsteps
inst from IRNaming: i32 %tsteps
original name : tsteps
returning name: tsteps
SUSAN: printing instruction   %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %polly.loop_header<header><latch><exiting>

printing BB:polly.loop_headerat 6187
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8 at 6678
SUSAN: argInput: i64 0
SUSAN: arg: i64 %polly.kmpc.lb
SUSAN: argInput updated:i64 0
SUSAN: getting value name for: i64 0
SUSAN: argInput: i64 998
SUSAN: arg: i64 %polly.kmpc.ub
SUSAN: argInput updated:i64 998
SUSAN: getting value name for: i64 998
SUSAN: argInput: i64 1
SUSAN: arg: i64 %polly.kmpc.inc
SUSAN: argInput updated:i64 1
SUSAN: getting value name for: i64 1
SUSAN: argInput:   %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: arg: i8* %polly.kmpc.shared
SUSAN: found store for struct 9066:   store double* %B, double** %polly.subfn.storeaddr.B, align 8
SUSAN: original Val: double* %BSUSAN: found store for struct 9066:   store double* %A, double** %polly.subfn.storeaddr.A, align 8
SUSAN: original Val: double* %ASUSAN: found store for struct 9066:   store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: original Val:   %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]SUSAN: found store for struct 9066:   store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
SUSAN: original Val: i32 %tstepsSUSAN: idx: 0
SUSAN: idx: 1
SUSAN: idx: 2
SUSAN: idx: 3
SUSAN: trying to find corresponding uses: i8* %polly.kmpc.shared
SUSAN: argidx: 24
Load:   %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: argidx: 16
Load:   %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: lbAlloca:   %polly.par.LBPtr = alloca i64, align 8
SUSAN: original ub: i64 %polly.kmpc.ub
SUSAN: omploop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: skipping omp loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

isomp: 1
SUSAN: opnd0  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: opnd1  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
SUSAN: LP->ub: i64 %polly.kmpc.ub
SUSAN: upperbound: i64 %polly.kmpc.ub
SUSAN: removing branch target:   br i1 %polly.hasIteration, label %polly.par.exit, label %polly.loop_preheader
SUSAN: inserting succBB: polly.par.exit
SUSAN: removing succBB
polly.par.exit:                                   ; preds = %polly.par.exit.loopexit, %polly.par.setup
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

SUSAN: BB:
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

SUSAN: BB:
polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

SUSAN: BB:
polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

SUSAN: BB:
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

SUSAN: BB:
polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN exitBB: 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

SUSAN: found latchpolly.loop_header
SUSAN: Node: topRegion
then SubNodes: 
else SubNodes: 
current region then bbs:
polly.par.setup
polly.loop_preheader
polly.loop_header
polly.par.exit.loopexit
polly.par.exit
current region else bbs:
current region then edges:
polly.par.setup -> polly.loop_preheader
polly.loop_preheader -> polly.loop_header
polly.loop_header -> polly.par.exit.loopexit
polly.par.exit.loopexit -> polly.par.exit
current region else edges:
SUSAN: BB polly.par.setup times2bePrinted: 1
SUSAN: BB polly.par.exit.loopexit times2bePrinted: 1
SUSAN: BB polly.par.exit times2bePrinted: 1
SUSAN: BB polly.loop_header times2bePrinted: 1
SUSAN: BB polly.loop_preheader times2bePrinted: 1
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: CI at 1400:   call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
SUSAN: CI at 1400:   call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
SUSAN: add return to deadinst:   ret void
SUSAN: recording livein for loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding live-in forpolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: finding liveins for Looppolly.loop_header
SUSAN: finding live-in for lbi64 %polly.kmpc.lb
SUSAN: finding liveins for Looppolly.loop_header
SUSAN: finding live-in for ubi64 %polly.kmpc.ub
SUSAN: finding liveins for Looppolly.loop_header
==========omp liveins========
==========omp liveins end========
SUSAN: adding to deadInsts  %polly.par.LBPtr = alloca i64, align 8
SUSAN: adding to deadInsts  %polly.par.UBPtr = alloca i64, align 8
SUSAN: adding to deadInsts  %polly.par.lastIterPtr = alloca i32, align 4
SUSAN: adding to deadInsts  %polly.par.StridePtr = alloca i64, align 8
SUSAN: adding to deadInsts  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
SUSAN: adding to deadInsts  %1 = bitcast i8* %0 to double**
SUSAN: adding to deadInsts  %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: adding to deadInsts  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
SUSAN: adding to deadInsts  %3 = bitcast i8* %2 to double**
SUSAN: adding to deadInsts  %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: adding to deadInsts  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
SUSAN: adding to deadInsts  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
SUSAN: adding to deadInsts  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
SUSAN: adding to deadInsts  store i32 0, i32* %polly.par.lastIterPtr, align 8
SUSAN: adding to deadInsts  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
SUSAN: adding to deadInsts  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
SUSAN: adding to deadInsts  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
SUSAN: adding to deadInsts  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: adding to deadInsts  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
SUSAN: adding to deadInsts  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
SUSAN: adding to deadInsts  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
SUSAN: adding to deadInsts  store i64 %4, i64* %polly.par.UBPtr, align 8
SUSAN: adding to deadInsts  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
SUSAN: adding to deadInsts  br label %polly.loop_preheader
SUSAN: adding to deadInsts  br label %polly.par.exit
SUSAN: adding to deadInsts  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
SUSAN: adding to deadInsts  ret void
SUSAN: adding to deadInsts  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
SUSAN: adding to deadInsts  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
SUSAN: adding to deadInsts  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
SUSAN: adding to deadInsts  br label %polly.loop_header
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

isomp
currInst :  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
currInst :  %1 = bitcast i8* %0 to double**
currInst :  %polly.subfunc.arg.A = load double*, double** %1, align 8
currInst :  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
currInst :  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
currInst :  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
currInst :  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
currInst :  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
currInst :  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %1 = bitcast i8* %0 to double**
currInst :  %polly.subfunc.arg.A = load double*, double** %1, align 8
currInst :  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
currInst :  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
currInst :  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
currInst :  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
currInst :  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
currInst :  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %polly.subfunc.arg.A = load double*, double** %1, align 8
currInst :  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
currInst :  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
currInst :  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
currInst :  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
currInst :  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
currInst :  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
currInst :  %3 = bitcast i8* %2 to double**
currInst :  %polly.subfunc.arg.B = load double*, double** %3, align 8
currInst :  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
currInst :  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %3 = bitcast i8* %2 to double**
currInst :  %polly.subfunc.arg.B = load double*, double** %3, align 8
currInst :  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
currInst :  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %polly.subfunc.arg.B = load double*, double** %3, align 8
currInst :  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
currInst :  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
currInst :  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
currInst :  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
currInst :  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
currInst :  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
currInst :  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
currInst :  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
currInst :  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
currInst :  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
currInst :  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
currInst :  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
currInst :  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
currInst :  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
currInst :  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
currInst :  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
currInst :  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
currInst :  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header
currInst :  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
currInst :  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
currInst :  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
currInst :  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
currInst :  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
currInst :  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
currInst :  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
currInst :  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
currInst :  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
currInst :  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
SUSAN: function 1685: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: adding loop level to loop in Function: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: argidx: 24
Load:   %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: argidx: 16
Load:   %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: found double gep: 1703:   %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
SUSAN: gep 1704:   %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
SUSAN: gep2 1705:   %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
SUSAN: found double gep: 1703:   %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
SUSAN: gep 1704:   %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
SUSAN: gep2 1705:   %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
SUSAN: found double gep: 1713:   store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
SUSAN: gep 1715:   %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
SUSAN: gep2 1716:   %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
SUSAN: getting value name for: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: phi related name: j
=========================SUSAN: IR NAMING BEFORE=====================
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8 -> j
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc -> j
SUSAN: inst:  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  br label %polly.loop_header
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: inst:  %polly.par.LBPtr = alloca i64, align 8
SUSAN: inst:  %polly.par.UBPtr = alloca i64, align 8
SUSAN: inst:  %polly.par.lastIterPtr = alloca i32, align 4
SUSAN: inst:  %polly.par.StridePtr = alloca i64, align 8
SUSAN: inst:  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
SUSAN: inst:  %1 = bitcast i8* %0 to double**
SUSAN: inst:  %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: inst:  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
SUSAN: inst:  %3 = bitcast i8* %2 to double**
SUSAN: inst:  %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: inst:  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
SUSAN: inst:  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
SUSAN: inst:  store i32 0, i32* %polly.par.lastIterPtr, align 8
SUSAN: inst:  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
SUSAN: inst:  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
SUSAN: inst:  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
SUSAN: inst:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  store i64 %4, i64* %polly.par.UBPtr, align 8
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  br label %polly.par.exit
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  ret void
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
SUSAN: inst:  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
SUSAN: inst:  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
SUSAN: inst:  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
SUSAN: inst:  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
SUSAN: inst:  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
SUSAN: inst:  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
SUSAN: inst:  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
SUSAN: inst:  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
SUSAN: inst:  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
SUSAN: inst:  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
SUSAN: inst:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header
j:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
SUSAN: inst:  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
SUSAN: inst:  br label %polly.loop_preheader
j:  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
=========================SUSAN: IR NAMING=====================
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8 -> j
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc -> j
SUSAN: adding entry block: 
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

SUSAN: printing bb:polly.par.setup
SUSAN: emitting branch:   br label %polly.loop_preheader
printing unconditional branch   br label %polly.loop_preheader
SUSAN: br:  br label %polly.loop_preheader
print succ0 :
polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header

SUSAN: printing bb:polly.loop_preheader
SUSAN: emitting branch:   br label %polly.loop_header
printing unconditional branch   br label %polly.loop_header
SUSAN: br:  br label %polly.loop_header
print succ0 :
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

SUSAN: printing loop polly.loop_header at 5538
SUSAN: start printing loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: loop block: polly.loop_header
SUSAN: latch 
polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !49
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !50
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

Loop: Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

isomp
SUSAN: condrelatedinst:  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: condrelatedinst:  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: condrelatedinst:  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: found for loop profile:
lb: i64 %polly.kmpc.lb
SUSAN: printing IV  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: declaring 3252:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: reconstructed variable counter increment for iv:j
SUSAN: returning inlined name 3339: 0SUSAN: operand: i64 %polly.kmpc.lb
SUSAN: condInst:   %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
SUSAN: returning inlined name 3339: 998SUSAN: operand: i64 %polly.kmpc.ub
SUSAN: printing loop body forLoop at depth 1 containing: %polly.loop_header<header><latch><exiting>

printing BB:polly.loop_headerat 6187
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: printing instruction   store double %p_div, double* %scevgep8, align 8, !alias.scope !25, !noalias !51 at 6678
SUSAN: getting value name for:   %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: gep 10928:   %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
SUSAN:writing first index:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !27
SUSAN: loadInst:   %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !22, !noalias !24
SUSAN: GEPINST:   %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:  %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: returning inlined name 3339: ASUSAN: operand:   %polly.subfunc.arg.A = load double*, double** %1, align 8
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
SUSAN: loadInst:   %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
SUSAN: returning inlined name 3426: Atrying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !22, !noalias !24
SUSAN: loadInst:   %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !22, !noalias !24
SUSAN: returning inlined name 3426: Atrying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: phi:   %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
SUSAN: find IV 809
SUSAN: emitting branch:   br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header
SUSAN: br:  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header
print succ0 :
polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

SUSAN: printing bb:polly.par.exit.loopexit
SUSAN: emitting branch:   br label %polly.par.exit
printing unconditional branch   br label %polly.par.exit
SUSAN: br:  br label %polly.par.exit
print succ0 :
polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

SUSAN: printing bb:polly.par.exit
trying to get IV for Loop:Loop at depth 1 containing: %polly.loop_header<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
printing BB in emitIfBlockpolly.merge_new_and_old.loopexit
printing BB:polly.merge_new_and_old.loopexitat 7169
SUSAN: emitting branch:   br label %polly.merge_new_and_old
printing unconditional branch   br label %polly.merge_new_and_old
printing BB in emitIfBlockentry.split
printing BB:entry.splitat 7169
SUSAN: emitting branch:   br label %for.cond1.preheader.preheader, !dbg !43
printing unconditional branch   br label %for.cond1.preheader.preheader, !dbg !43
printing BB in emitIfBlockfor.cond1.preheader.preheader
printing BB:for.cond1.preheader.preheaderat 7169
SUSAN: emitting branch:   br label %for.cond1.preheader, !dbg !43
printing unconditional branch   br label %for.cond1.preheader, !dbg !43
printing BB in emitIfBlockfor.cond1.preheader
SUSAN: printing loop for.cond1.preheader at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: loop block: for.cond1.preheader
SUSAN: loop block: for.body3
SUSAN: loop block: for.inc12
SUSAN: latch 
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

Loop: Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: condrelatedinst:  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i32 0
SUSAN: printing IV  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: declaring 3252:   %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
SUSAN: reconstructed variable counter increment for iv:i
SUSAN: condInst:  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
SUSAN: getting value name for: i32 %tsteps
inst from IRNaming: i32 %tsteps
original name : tsteps
returning name: tsteps
SUSAN: printing instruction   %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: latch 
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc12
printing BB:for.cond1.preheaderat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader<header>,%for.body3,%for.inc12<latch><exiting>
    Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br label %for.body3, !dbg !44
printing unconditional branch   br label %for.body3, !dbg !44
SUSAN: printing loop for.body3 at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: loop block: for.body3
SUSAN: latch 
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

Loop: Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: condrelatedinst:  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: condrelatedinst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: condrelatedinst:  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: found for loop profile:
lb: i64 1
SUSAN: printing IV  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: reconstructed variable counter increment for iv:j
SUSAN: condInst:  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
SUSAN: printing instruction   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: printing loop body forLoop at depth 2 containing: %for.body3<header><latch><exiting>

printing BB:for.body3at 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: printing instruction   store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49 at 6678
SUSAN: GEPINST:   %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %add = fadd double %4, %5, !dbg !54
SUSAN: loadInst:   %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %3 = add nsw i64 %indvars.iv, -1, !dbg !46
SUSAN: loadInst:   %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
SUSAN: GEPINST:   %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
SUSAN: loadInst:   %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
SUSAN: GEPINST:   %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body3<header><latch><exiting>

SUSAN: phi:   %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
SUSAN: find IV 809
SUSAN: emitting branch:   br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62
printing BB in emitIfBlockfor.body3
printing BB:for.body3at 7164
SUSAN: BB already printed (could be a bug)
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

printing BB in emitIfBlockfor.inc12
printing BB:for.inc12at 7164
SUSAN: BB already printed (could be a bug)
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

printing BB in emitIfBlockpolly.merge_new_and_old.loopexit1
printing BB:polly.merge_new_and_old.loopexit1at 7169
SUSAN: emitting branch:   br label %polly.merge_new_and_old
printing unconditional branch   br label %polly.merge_new_and_old
SUSAN: br:  br i1 %2, label %polly.start, label %entry.split
print succ0 :
polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

SUSAN: printing bb:polly.start
SUSAN: BB already printed (could be a bug)
polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

SUSAN: br:  br label %polly.loop_header.preheader
print succ0 :
polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

SUSAN: printing bb:entry.split
SUSAN: BB already printed (could be a bug)
entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

SUSAN: br:  br label %for.cond1.preheader.preheader, !dbg !43
print succ0 :
for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

SUSAN: printing bb:polly.loop_header.preheader
SUSAN: BB already printed (could be a bug)
polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

SUSAN: br:  br label %polly.loop_header
print succ0 :
polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header

SUSAN: printing bb:for.cond1.preheader.preheader
SUSAN: BB already printed (could be a bug)
for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

SUSAN: br:  br label %for.cond1.preheader, !dbg !43
print succ0 :
for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

SUSAN: br:  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
print succ0 :
polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

SUSAN: br:  br label %for.body3, !dbg !44
print succ0 :
for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

SUSAN: printing bb:polly.merge_new_and_old.loopexit
SUSAN: BB already printed (could be a bug)
polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

SUSAN: br:  br label %polly.merge_new_and_old
print succ0 :
polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

SUSAN: br:  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62
print succ0 :
for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

SUSAN: printing bb:polly.merge_new_and_old
SUSAN: emitting branch:   br label %for.body18, !dbg !69
printing unconditional branch   br label %for.body18, !dbg !69
SUSAN: br:  br label %for.body18, !dbg !69
print succ0 :
for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

SUSAN: br:  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65
print succ0 :
polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

SUSAN: printing loop for.body18 at 5538
SUSAN: start printing loop: Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: loop block: for.body18
SUSAN: loop block: if.then
SUSAN: loop block: for.inc22
SUSAN: latch 
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

Loop: Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: condrelatedinst:  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
SUSAN: printing IV  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
SUSAN: declaring 3252:   %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
SUSAN: reconstructed variable counter increment for iv:i
SUSAN: condInst:  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
SUSAN: printing instruction   %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: latch 
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc22
printing BB:for.body18at 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74 at 6678
SUSAN: getting value name for: ; Function Attrs: nofree nounwind
declare dso_local i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: first index is struct or array type
SUSAN: getting value name for: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
SUSAN: loadInst:   %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
SUSAN: GEPINST:   %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
printing BB in emitIfBlockif.then
printing BB:if.thenat 7164
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body18<header>,%if.then,%for.inc22<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82 at 6678
SUSAN: getting value name for: ; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

SUSAN: emitting branch:   br label %for.inc22, !dbg !82
printing unconditional branch   br label %for.inc22, !dbg !82
printing BB:if.thenat 6187
SUSAN: BB already printed (could be a bug)
if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

SUSAN: br:  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78
print succ0 :
if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

SUSAN: printing bb:polly.merge_new_and_old.loopexit1
SUSAN: BB already printed (could be a bug)
polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

SUSAN: br:  br label %polly.merge_new_and_old
print succ0 :
polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

SUSAN: br:  br label %for.inc22, !dbg !82
print succ0 :
for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

SUSAN: br:  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85
print succ0 :
for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

SUSAN: printing bb:for.cond.cleanup
SUSAN: printing instruction   %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67 at 6678
SUSAN: getting value name for: ; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

OMP FUNC: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

OMP FUNC: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: latch 
for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !46, metadata !DIExpression()), !dbg !47
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
  %conv.i = sitofp i32 %2 to double, !dbg !51
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !46, metadata !DIExpression()), !dbg !47
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68

Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

none omp loop ub: i64 1000
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

isomp: 0
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !26, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i8** %argv, metadata !27, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 1000, metadata !28, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 10, metadata !29, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression()), !dbg !33
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
  %0 = bitcast i8* %call1 to double*, !dbg !35
  call void @llvm.dbg.value(metadata double* %0, metadata !31, metadata !DIExpression()), !dbg !33
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
  %1 = bitcast i8* %call4 to double*, !dbg !37
  call void @llvm.dbg.value(metadata double* %1, metadata !32, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 1000, metadata !38, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata double* %0, metadata !44, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata double* %1, metadata !45, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 0, metadata !46, metadata !DIExpression()), !dbg !47
  br label %for.body.i, !dbg !49

SUSAN: BB:
for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !46, metadata !DIExpression()), !dbg !47
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
  %conv.i = sitofp i32 %2 to double, !dbg !51
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !46, metadata !DIExpression()), !dbg !47
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68

SUSAN: BB:
init_array.exit:                                  ; preds = %for.body.i
  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
  tail call void @free(i8* nonnull %call1) #7, !dbg !71
  tail call void @free(i8* nonnull %call4) #7, !dbg !72
  ret i32 0, !dbg !73

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN exitBB: 
for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !46, metadata !DIExpression()), !dbg !47
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
  %conv.i = sitofp i32 %2 to double, !dbg !51
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !46, metadata !DIExpression()), !dbg !47
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68

SUSAN: found latchfor.body.i
SUSAN: Node: topRegion
then SubNodes: 
else SubNodes: 
current region then bbs:
entry
for.body.i
init_array.exit
current region else bbs:
current region then edges:
entry -> for.body.i
for.body.i -> init_array.exit
current region else edges:
SUSAN: BB entry times2bePrinted: 1
SUSAN: BB for.body.i times2bePrinted: 1
SUSAN: BB init_array.exit times2bePrinted: 1
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %argc, metadata !97, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i8** %argv, metadata !98, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 1000, metadata !99, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 10, metadata !100, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !101, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: found malloc 1403:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %0, metadata !102, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: found malloc 1403:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %1, metadata !103, metadata !DIExpression()), !dbg !104
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 1000, metadata !109, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %0, metadata !112, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %1, metadata !113, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !114, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !114, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !114, metadata !DIExpression()), !dbg !115
SUSAN: CI at 1400:   tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
SUSAN: CI at 1400:   tail call void @free(i8* nonnull %call1) #7, !dbg !71
SUSAN: CI at 1400:   tail call void @free(i8* nonnull %call4) #7, !dbg !72
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

currInst :  %0 = bitcast i8* %call1 to double*, !dbg !35
currInst :  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
currInst :  %1 = bitcast i8* %call4 to double*, !dbg !37
currInst :  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
currInst :  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
currInst :  %conv.i = sitofp i32 %2 to double, !dbg !51
currInst :  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
currInst :  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
currInst :  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
currInst :  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
currInst :  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
currInst :  %conv.i = sitofp i32 %2 to double, !dbg !51
currInst :  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
currInst :  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
currInst :  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
currInst :  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
currInst :  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
currInst :  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
currInst :  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
currInst :  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
currInst :  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
currInst :  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
currInst :  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
currInst :  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
currInst :  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
currInst :  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
currInst :  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
currInst :  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
currInst :  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
currInst :  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
currInst :  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
currInst :  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
currInst :  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
currInst :  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
currInst :  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
currInst :  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68
SUSAN: function 1685: ; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #5 !dbg !93 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !97, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i8** %argv, metadata !98, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !99, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 10, metadata !100, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 undef, metadata !101, metadata !DIExpression()), !dbg !104
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !105
  %0 = bitcast i8* %call1 to double*, !dbg !106
  call void @llvm.dbg.value(metadata double* %0, metadata !102, metadata !DIExpression()), !dbg !104
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !107
  %1 = bitcast i8* %call4 to double*, !dbg !108
  call void @llvm.dbg.value(metadata double* %1, metadata !103, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !109, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %0, metadata !112, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %1, metadata !113, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata i32 0, metadata !114, metadata !DIExpression()), !dbg !115
  br label %for.body.i, !dbg !117

for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !114, metadata !DIExpression()), !dbg !115
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !119
  %conv.i = sitofp i32 %2 to double, !dbg !119
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !122
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !123
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !124
  store double %div.i, double* %arrayidx.i, align 8, !dbg !125, !tbaa !49
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !126
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !127
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !128
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !129, !tbaa !49
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !130
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !114, metadata !DIExpression()), !dbg !115
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !131
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !117, !llvm.loop !132

init_array.exit:                                  ; preds = %for.body.i
  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !134
  tail call void @free(i8* nonnull %call1) #7, !dbg !135
  tail call void @free(i8* nonnull %call4) #7, !dbg !136
  ret i32 0, !dbg !137
}

SUSAN: found double mallocs! 
malloc:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
castInst:   %0 = bitcast i8* %call1 to double*, !dbg !35
SUSAN: found double mallocs! 
malloc:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
castInst:   %1 = bitcast i8* %call4 to double*, !dbg !37
SUSAN: argidx: 24
Load:   %polly.subfunc.arg.B = load double*, double** %3, align 8
SUSAN: argidx: 16
Load:   %polly.subfunc.arg.A = load double*, double** %1, align 8
SUSAN: getting value name for: ; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #5 !dbg !93 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !97, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i8** %argv, metadata !98, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !99, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 10, metadata !100, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 undef, metadata !101, metadata !DIExpression()), !dbg !104
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !105
  %0 = bitcast i8* %call1 to double*, !dbg !106
  call void @llvm.dbg.value(metadata double* %0, metadata !102, metadata !DIExpression()), !dbg !104
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !107
  %1 = bitcast i8* %call4 to double*, !dbg !108
  call void @llvm.dbg.value(metadata double* %1, metadata !103, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !109, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %0, metadata !112, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %1, metadata !113, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata i32 0, metadata !114, metadata !DIExpression()), !dbg !115
  br label %for.body.i, !dbg !117

for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !114, metadata !DIExpression()), !dbg !115
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !119
  %conv.i = sitofp i32 %2 to double, !dbg !119
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !122
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !123
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !124
  store double %div.i, double* %arrayidx.i, align 8, !dbg !125, !tbaa !49
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !126
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !127
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !128
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !129, !tbaa !49
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !130
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !114, metadata !DIExpression()), !dbg !115
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !131
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !117, !llvm.loop !132

init_array.exit:                                  ; preds = %for.body.i
  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !134
  tail call void @free(i8* nonnull %call1) #7, !dbg !135
  tail call void @free(i8* nonnull %call4) #7, !dbg !136
  ret i32 0, !dbg !137
}

SUSAN: found argument 6346: i32 %argc
SUSAN: found argument 6346: i8** %argv
SUSAN: phi related name: i
=========================SUSAN: IR NAMING BEFORE=====================
i32 %argc -> argc
i8** %argv -> argv
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ] -> i
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34 -> A
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36 -> B
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66 -> i
SUSAN: inst:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %argc, metadata !97, metadata !DIExpression()), !dbg !104
SUSAN: inst:  call void @llvm.dbg.value(metadata i8** %argv, metadata !98, metadata !DIExpression()), !dbg !104
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 1000, metadata !99, metadata !DIExpression()), !dbg !104
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 10, metadata !100, metadata !DIExpression()), !dbg !104
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !101, metadata !DIExpression()), !dbg !104
SUSAN: inst:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: inst:  %0 = bitcast i8* %call1 to double*, !dbg !35
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %0, metadata !102, metadata !DIExpression()), !dbg !104
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: inst:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  %1 = bitcast i8* %call4 to double*, !dbg !37
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %1, metadata !103, metadata !DIExpression()), !dbg !104
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 1000, metadata !109, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %0, metadata !112, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %1, metadata !113, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !114, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  br label %for.body.i, !dbg !49
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !114, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %conv.i = sitofp i32 %2 to double, !dbg !51
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: inst:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !114, metadata !DIExpression()), !dbg !115
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  tail call void @free(i8* nonnull %call1) #7, !dbg !71
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  tail call void @free(i8* nonnull %call4) #7, !dbg !72
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
SUSAN: inst:  ret i32 0, !dbg !73
A:  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
B:  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
i:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
=========================SUSAN: IR NAMING=====================
i32 %argc -> argc
i8** %argv -> argv
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ] -> i
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34 -> A
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36 -> B
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66 -> i
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: adding entry block: 
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !26, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i8** %argv, metadata !27, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 1000, metadata !28, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 10, metadata !29, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression()), !dbg !33
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
  %0 = bitcast i8* %call1 to double*, !dbg !35
  call void @llvm.dbg.value(metadata double* %0, metadata !31, metadata !DIExpression()), !dbg !33
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
  %1 = bitcast i8* %call4 to double*, !dbg !37
  call void @llvm.dbg.value(metadata double* %1, metadata !32, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.value(metadata i32 1000, metadata !38, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata double* %0, metadata !44, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata double* %1, metadata !45, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 0, metadata !46, metadata !DIExpression()), !dbg !47
  br label %for.body.i, !dbg !49

SUSAN: printing bb:entry
SUSAN: printing instruction   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34 at 6678
SUSAN: getting value name for:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
inst from IRNaming:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
original name : A
returning name: A
SUSAN: declaring 3252:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
SUSAN: getting value name for:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
inst from IRNaming:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
original name : A
returning name: A
SUSAN: declaring with reconstructed name 3286: A
SUSAN: getting value name for:   %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: printing varname 7310: A
SUSAN: getting value name for: ; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #3

SUSAN: printing instruction   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36 at 6678
SUSAN: getting value name for:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
inst from IRNaming:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
original name : B
returning name: B
SUSAN: declaring 3252:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
SUSAN: getting value name for:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
inst from IRNaming:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
original name : B
returning name: B
SUSAN: declaring with reconstructed name 3286: B
SUSAN: getting value name for:   %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: printing varname 7310: B
SUSAN: getting value name for: ; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #3

SUSAN: emitting branch:   br label %for.body.i, !dbg !49
printing unconditional branch   br label %for.body.i, !dbg !49
SUSAN: br:  br label %for.body.i, !dbg !49
print succ0 :
for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !46, metadata !DIExpression()), !dbg !47
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
  %conv.i = sitofp i32 %2 to double, !dbg !51
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !46, metadata !DIExpression()), !dbg !47
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68

SUSAN: printing loop for.body.i at 5538
SUSAN: start printing loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: loop block: for.body.i
SUSAN: latch 
for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !46, metadata !DIExpression()), !dbg !47
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
  %conv.i = sitofp i32 %2 to double, !dbg !51
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !54
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !55
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
  store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !62
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !63
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !46, metadata !DIExpression()), !dbg !47
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68

Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found LP for L:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: condrelatedinst:  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: condrelatedinst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
SUSAN: printing IV  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: declaring 3252:   %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
SUSAN: reconstructed variable counter increment for iv:i
SUSAN: condInst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !67
SUSAN: printing instruction   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !66 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.body.i<header><latch><exiting>

printing BB:for.body.iat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %div.i, double* %arrayidx.i, align 8, !dbg !57, !tbaa !58 at 6678
SUSAN: GEPINST:   %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !56
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:  %0 = bitcast i8* %call1 to double*, !dbg !35
SUSAN: visiting cast:   %0 = bitcast i8* %call1 to double*, !dbg !35
SUSAN: printing cast from: i8* to double*
SUSAN: getting value name for:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
inst from IRNaming:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
original name : A
returning name: A
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: visiting cast:   %conv.i = sitofp i32 %2 to double, !dbg !51
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: visiting cast:   %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %div5.i, double* %arrayidx7.i, align 8, !dbg !65, !tbaa !58 at 6678
SUSAN: GEPINST:   %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !64
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:  %1 = bitcast i8* %call4 to double*, !dbg !37
SUSAN: visiting cast:   %1 = bitcast i8* %call4 to double*, !dbg !37
SUSAN: printing cast from: i8* to double*
SUSAN: getting value name for:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
inst from IRNaming:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
original name : B
returning name: B
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: visiting cast:   %conv.i = sitofp i32 %2 to double, !dbg !51
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: visiting cast:   %2 = trunc i64 %indvars.iv.i to i32, !dbg !51
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.body.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68
SUSAN: br:  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !49, !llvm.loop !68
print succ0 :
init_array.exit:                                  ; preds = %for.body.i
  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70
  tail call void @free(i8* nonnull %call1) #7, !dbg !71
  tail call void @free(i8* nonnull %call4) #7, !dbg !72
  ret i32 0, !dbg !73

SUSAN: printing bb:init_array.exit
SUSAN: printing instruction   tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !70 at 6678
SUSAN: getting value name for: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: visiting cast:   %0 = bitcast i8* %call1 to double*, !dbg !35
SUSAN: printing cast from: i8* to double*
SUSAN: getting value name for:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
inst from IRNaming:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
original name : A
returning name: A
SUSAN: visiting cast:   %1 = bitcast i8* %call4 to double*, !dbg !37
SUSAN: printing cast from: i8* to double*
SUSAN: getting value name for:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
inst from IRNaming:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
original name : B
returning name: B
SUSAN: printing instruction   tail call void @free(i8* nonnull %call1) #7, !dbg !71 at 6678
SUSAN: getting value name for: ; Function Attrs: nounwind
declare !dbg !10 dso_local void @free(i8* nocapture) local_unnamed_addr #6

SUSAN: getting value name for:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
inst from IRNaming:   %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !34
original name : A
returning name: A
SUSAN: printing instruction   tail call void @free(i8* nonnull %call4) #7, !dbg !72 at 6678
SUSAN: getting value name for: ; Function Attrs: nounwind
declare !dbg !10 dso_local void @free(i8* nocapture) local_unnamed_addr #6

SUSAN: getting value name for:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
inst from IRNaming:   %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !36
original name : B
returning name: B
TOTAL VARIABLES: 8
RECONSTRUCTED VARIABLES: 8
SUSAN: adding utaskdefine internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: argInput 4158: i64 0
SUSAN: arg 4158: i64 %polly.kmpc.lb
SUSAN: argInput 4158: i64 998
SUSAN: arg 4158: i64 %polly.kmpc.ub
SUSAN: argInput 4158: i64 1
SUSAN: arg 4158: i64 %polly.kmpc.inc
SUSAN: argInput 4158:   %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
SUSAN: arg 4158: i8* %polly.kmpc.shared
SUSAN: found store for struct 9066:   store double* %B, double** %polly.subfn.storeaddr.B, align 8
SUSAN: found store for struct 9066:   store double* %A, double** %polly.subfn.storeaddr.A, align 8
SUSAN: found store for struct 9066:   store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
SUSAN: found store for struct 9066:   store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
SUSAN: getting value name for: ; Function Attrs: nounwind uwtable
define dso_local void @A_B_May_Alias(i32 %tsteps, double* %A, double* %B) local_unnamed_addr #0 !dbg !22 {
entry:
  %polly.par.userContext = alloca { i32, i64, double*, double* }, align 8
  %polly.access.A = getelementptr double, double* %A, i64 1000
  %polly.access.B = getelementptr double, double* %B, i64 1
  %0 = icmp ule double* %polly.access.A, %polly.access.B
  %polly.access.B51 = getelementptr double, double* %B, i64 999
  %1 = icmp ule double* %polly.access.B51, %A
  %2 = or i1 %0, %1
  br i1 %2, label %polly.start, label %entry.split

entry.split:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %tsteps, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %A, metadata !28, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double* %B, metadata !29, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !39
  %cmp46 = icmp sgt i32 %tsteps, 0, !dbg !40
  br label %for.cond1.preheader.preheader, !dbg !43

for.cond1.preheader.preheader:                    ; preds = %entry.split
  br label %for.cond1.preheader, !dbg !43

for.cond1.preheader:                              ; preds = %for.inc12, %for.cond1.preheader.preheader
  %t.047 = phi i32 [ %inc13, %for.inc12 ], [ 0, %for.cond1.preheader.preheader ]
  call void @llvm.dbg.value(metadata i32 %t.047, metadata !30, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !39
  br label %for.body3, !dbg !44

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 1, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !31, metadata !DIExpression()), !dbg !39
  %3 = add nsw i64 %indvars.iv, -1, !dbg !46
  %arrayidx = getelementptr inbounds double, double* %A, i64 %3, !dbg !48
  %4 = load double, double* %arrayidx, align 8, !dbg !48, !tbaa !49
  %arrayidx5 = getelementptr inbounds double, double* %A, i64 %indvars.iv, !dbg !53
  %5 = load double, double* %arrayidx5, align 8, !dbg !53, !tbaa !49
  %add = fadd double %4, %5, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %arrayidx8 = getelementptr inbounds double, double* %A, i64 %indvars.iv.next, !dbg !56
  %6 = load double, double* %arrayidx8, align 8, !dbg !56, !tbaa !49
  %add9 = fadd double %add, %6, !dbg !57
  %div = fdiv double %add9, 3.000000e+00, !dbg !58
  %arrayidx11 = getelementptr inbounds double, double* %B, i64 %indvars.iv, !dbg !59
  store double %div, double* %arrayidx11, align 8, !dbg !60, !tbaa !49
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !31, metadata !DIExpression()), !dbg !39
  %exitcond49 = icmp eq i64 %indvars.iv.next, 999, !dbg !61
  br i1 %exitcond49, label %for.inc12, label %for.body3, !dbg !44, !llvm.loop !62

for.inc12:                                        ; preds = %for.body3
  %inc13 = add nuw nsw i32 %t.047, 1, !dbg !64
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !30, metadata !DIExpression()), !dbg !39
  %exitcond50 = icmp eq i32 %inc13, %tsteps, !dbg !40
  br i1 %exitcond50, label %polly.merge_new_and_old.loopexit1, label %for.cond1.preheader, !dbg !43, !llvm.loop !65

for.cond.cleanup:                                 ; preds = %for.inc22
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %10) #7, !dbg !67
  ret void, !dbg !68

polly.merge_new_and_old.loopexit:                 ; preds = %polly.loop_header
  br label %polly.merge_new_and_old

polly.merge_new_and_old.loopexit1:                ; preds = %for.inc12
  br label %polly.merge_new_and_old

polly.merge_new_and_old:                          ; preds = %polly.merge_new_and_old.loopexit1, %polly.merge_new_and_old.loopexit
  %.merge = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br label %for.body18, !dbg !69

for.body18:                                       ; preds = %for.inc22, %polly.merge_new_and_old
  %7 = phi %struct._IO_FILE* [ %10, %for.inc22 ], [ %.merge, %polly.merge_new_and_old ]
  %i15.044 = phi i64 [ %inc23, %for.inc22 ], [ 0, %polly.merge_new_and_old ]
  call void @llvm.dbg.value(metadata i64 %i15.044, metadata !32, metadata !DIExpression()), !dbg !70
  %arrayidx19 = getelementptr inbounds double, double* %B, i64 %i15.044, !dbg !71
  %8 = load double, double* %arrayidx19, align 8, !dbg !71, !tbaa !49
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %8) #7, !dbg !74
  %rem = urem i64 %i15.044, 20, !dbg !75
  %cmp20 = icmp eq i64 %rem, 0, !dbg !77
  br i1 %cmp20, label %if.then, label %for.inc22, !dbg !78

if.then:                                          ; preds = %for.body18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !79, !tbaa !80
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %9) #7, !dbg !82
  br label %for.inc22, !dbg !82

for.inc22:                                        ; preds = %if.then, %for.body18
  %inc23 = add nuw nsw i64 %i15.044, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !32, metadata !DIExpression()), !dbg !70
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !39, !tbaa !80
  %exitcond = icmp eq i64 %inc23, 1000, !dbg !84
  br i1 %exitcond, label %for.cond.cleanup, label %for.body18, !dbg !69, !llvm.loop !85

polly.start:                                      ; preds = %entry
  %11 = sext i32 %tsteps to i64
  %polly.loop_guard = icmp sgt i32 %tsteps, 0
  br label %polly.loop_header.preheader

polly.loop_header.preheader:                      ; preds = %polly.start
  %polly.subfn.storeaddr.tsteps = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 0
  %polly.subfn.storeaddr.polly.indvar = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 1
  %polly.subfn.storeaddr.A = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 2
  %polly.subfn.storeaddr.B = getelementptr inbounds { i32, i64, double*, double* }, { i32, i64, double*, double* }* %polly.par.userContext, i64 0, i32 3
  br label %polly.loop_header

polly.loop_header:                                ; preds = %polly.loop_header, %polly.loop_header.preheader
  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_header ], [ 0, %polly.loop_header.preheader ]
  store i32 %tsteps, i32* %polly.subfn.storeaddr.tsteps, align 8
  store i64 %polly.indvar, i64* %polly.subfn.storeaddr.polly.indvar, align 8
  store double* %A, double** %polly.subfn.storeaddr.A, align 8
  store double* %B, double** %polly.subfn.storeaddr.B, align 8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @.loc.dummy, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i8*)* @A_B_May_Alias_polly_subfn to void (i32*, i32*, ...)*), i64 0, i64 998, i64 1, { i32, i64, double*, double* }* nonnull %polly.par.userContext) #8
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond56 = icmp eq i64 %polly.indvar_next, %11
  br i1 %exitcond56, label %polly.merge_new_and_old.loopexit, label %polly.loop_header
}

SUSAN: getting value name for: define internal void @A_B_May_Alias_polly_subfn(i32* nocapture readonly %polly.kmpc.global_tid, i32* nocapture readnone %polly.kmpc.bound_tid, i64 %polly.kmpc.lb, i64 %polly.kmpc.ub, i64 %polly.kmpc.inc, i8* nocapture readonly %polly.kmpc.shared) #4 {
polly.par.setup:
  %polly.par.LBPtr = alloca i64, align 8
  %polly.par.UBPtr = alloca i64, align 8
  %polly.par.lastIterPtr = alloca i32, align 4
  %polly.par.StridePtr = alloca i64, align 8
  %0 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 16
  %1 = bitcast i8* %0 to double**
  %polly.subfunc.arg.A = load double*, double** %1, align 8
  %2 = getelementptr inbounds i8, i8* %polly.kmpc.shared, i64 24
  %3 = bitcast i8* %2 to double**
  %polly.subfunc.arg.B = load double*, double** %3, align 8
  %polly.par.global_tid = load i32, i32* %polly.kmpc.global_tid, align 8
  store i64 %polly.kmpc.lb, i64* %polly.par.LBPtr, align 8
  store i64 %polly.kmpc.ub, i64* %polly.par.UBPtr, align 8
  store i32 0, i32* %polly.par.lastIterPtr, align 8
  store i64 %polly.kmpc.inc, i64* %polly.par.StridePtr, align 8
  %polly.indvar.UBAdjusted = add i64 %polly.kmpc.ub, -1
  call void @__kmpc_for_static_init_8(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid, i32 34, i32* nonnull %polly.par.lastIterPtr, i64* nonnull %polly.par.LBPtr, i64* nonnull %polly.par.UBPtr, i64* nonnull %polly.par.StridePtr, i64 1, i64 1)
  %polly.indvar.LB = load i64, i64* %polly.par.LBPtr, align 8
  %polly.indvar.UB = load i64, i64* %polly.par.UBPtr, align 8
  %polly.adjustedUBOutOfBounds = icmp slt i64 %polly.indvar.UB, %polly.indvar.UBAdjusted
  %4 = select i1 %polly.adjustedUBOutOfBounds, i64 %polly.indvar.UB, i64 %polly.indvar.UBAdjusted
  store i64 %4, i64* %polly.par.UBPtr, align 8
  %polly.hasIteration = icmp sgt i64 %polly.indvar.LB, %4
  br label %polly.loop_preheader

polly.par.exit.loopexit:                          ; preds = %polly.loop_header
  br label %polly.par.exit

polly.par.exit:                                   ; preds = %polly.par.exit.loopexit
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @.loc.dummy, i32 %polly.par.global_tid)
  ret void

polly.loop_header:                                ; preds = %polly.loop_preheader, %polly.loop_header
  %polly.indvar = phi i64 [ %polly.indvar.LB, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_header ]
  %scevgep = getelementptr double, double* %polly.subfunc.arg.A, i64 %polly.indvar
  %_p_scalar_ = load double, double* %scevgep, align 8, !alias.scope !87, !noalias !89
  %scevgep2 = getelementptr double, double* %scevgep1, i64 %polly.indvar
  %_p_scalar_3 = load double, double* %scevgep2, align 8, !alias.scope !87, !noalias !89
  %p_add = fadd double %_p_scalar_, %_p_scalar_3, !dbg !54
  %scevgep5 = getelementptr double, double* %scevgep4, i64 %polly.indvar
  %_p_scalar_6 = load double, double* %scevgep5, align 8, !alias.scope !87, !noalias !89
  %p_add9 = fadd double %p_add, %_p_scalar_6, !dbg !57
  %p_div = fdiv double %p_add9, 3.000000e+00, !dbg !58
  %scevgep8 = getelementptr double, double* %scevgep7, i64 %polly.indvar
  store double %p_div, double* %scevgep8, align 8, !alias.scope !90, !noalias !92
  %polly.indvar_next = add nsw i64 %polly.indvar, %polly.kmpc.inc
  %polly.loop_cond = icmp sgt i64 %polly.indvar_next, %4
  br i1 %polly.loop_cond, label %polly.par.exit.loopexit, label %polly.loop_header

polly.loop_preheader:                             ; preds = %polly.par.setup
  %scevgep1 = getelementptr double, double* %polly.subfunc.arg.A, i64 1
  %scevgep4 = getelementptr double, double* %polly.subfunc.arg.A, i64 2
  %scevgep7 = getelementptr double, double* %polly.subfunc.arg.B, i64 1
  br label %polly.loop_header
}

SUSAN: getting value name for: ; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #5 !dbg !93 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !97, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i8** %argv, metadata !98, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !99, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 10, metadata !100, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 undef, metadata !101, metadata !DIExpression()), !dbg !104
  %call1 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !105
  %0 = bitcast i8* %call1 to double*, !dbg !106
  call void @llvm.dbg.value(metadata double* %0, metadata !102, metadata !DIExpression()), !dbg !104
  %call4 = tail call noalias dereferenceable_or_null(8000) i8* @malloc(i64 8000) #7, !dbg !107
  %1 = bitcast i8* %call4 to double*, !dbg !108
  call void @llvm.dbg.value(metadata double* %1, metadata !103, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata i32 1000, metadata !109, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %0, metadata !112, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata double* %1, metadata !113, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.value(metadata i32 0, metadata !114, metadata !DIExpression()), !dbg !115
  br label %for.body.i, !dbg !117

for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !114, metadata !DIExpression()), !dbg !115
  %2 = trunc i64 %indvars.iv.i to i32, !dbg !119
  %conv.i = sitofp i32 %2 to double, !dbg !119
  %add.i = fadd double %conv.i, 2.000000e+00, !dbg !122
  %div.i = fdiv double %add.i, 1.000000e+03, !dbg !123
  %arrayidx.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i, !dbg !124
  store double %div.i, double* %arrayidx.i, align 8, !dbg !125, !tbaa !49
  %add3.i = fadd double %conv.i, 3.000000e+00, !dbg !126
  %div5.i = fdiv double %add3.i, 1.000000e+03, !dbg !127
  %arrayidx7.i = getelementptr inbounds double, double* %1, i64 %indvars.iv.i, !dbg !128
  store double %div5.i, double* %arrayidx7.i, align 8, !dbg !129, !tbaa !49
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !130
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !114, metadata !DIExpression()), !dbg !115
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 1000, !dbg !131
  br i1 %exitcond.i, label %init_array.exit, label %for.body.i, !dbg !117, !llvm.loop !132

init_array.exit:                                  ; preds = %for.body.i
  tail call void @A_B_May_Alias(i32 10, double* nonnull %0, double* nonnull %1), !dbg !134
  tail call void @free(i8* nonnull %call1) #7, !dbg !135
  tail call void @free(i8* nonnull %call4) #7, !dbg !136
  ret i32 0, !dbg !137
}

SUSAN: currGlob: @stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
SUSAN: currGlob: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
SUSAN: getting value name for: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
SUSAN: currGlob: @.loc.dummy = private constant %struct.ident_t { i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.ident, i32 0, i32 0) }, align 8
SUSAN: currGlob: @.str.ident = private constant [23 x i8] c"Source location dummy.\00", align 1
SUSAN: getting value name for: @.str.ident = private constant [23 x i8] c"Source location dummy.\00", align 1
SUSAN: currGlob: @.loc.dummy = private constant %struct.ident_t { i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.ident, i32 0, i32 0) }, align 8
SUSAN: getting value name for: @.loc.dummy = private constant %struct.ident_t { i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.ident, i32 0, i32 0) }, align 8
SUSAN: first index is struct or array type
SUSAN: getting value name for: @.str.ident = private constant [23 x i8] c"Source location dummy.\00", align 1
